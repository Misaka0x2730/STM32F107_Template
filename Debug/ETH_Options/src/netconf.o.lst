   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"netconf.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	xnetif,48,4
  19              		.bss
  20              		.align	2
  21              	UID:
  22 0000 00000000 		.space	4
  23              		.section	.text.ETH_CheckLink,"ax",%progbits
  24              		.align	2
  25              		.global	ETH_CheckLink
  26              		.thumb
  27              		.thumb_func
  29              	ETH_CheckLink:
  30              	.LFB29:
  31              		.file 1 "../ETH_Options/src/netconf.c"
   1:../ETH_Options/src/netconf.c **** /**
   2:../ETH_Options/src/netconf.c ****   ******************************************************************************
   3:../ETH_Options/src/netconf.c ****   * @file    netconf.c
   4:../ETH_Options/src/netconf.c ****   * @author  MCD Application Team
   5:../ETH_Options/src/netconf.c ****   * @version V1.0.0
   6:../ETH_Options/src/netconf.c ****   * @date    31-October-2011
   7:../ETH_Options/src/netconf.c ****   * @brief   Network connection configuration
   8:../ETH_Options/src/netconf.c ****   ******************************************************************************
   9:../ETH_Options/src/netconf.c ****   * @attention
  10:../ETH_Options/src/netconf.c ****   *
  11:../ETH_Options/src/netconf.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../ETH_Options/src/netconf.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../ETH_Options/src/netconf.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../ETH_Options/src/netconf.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../ETH_Options/src/netconf.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../ETH_Options/src/netconf.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../ETH_Options/src/netconf.c ****   *
  18:../ETH_Options/src/netconf.c ****   * <h2><center>&copy; Portions COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../ETH_Options/src/netconf.c ****   ******************************************************************************
  20:../ETH_Options/src/netconf.c ****   */
  21:../ETH_Options/src/netconf.c **** /* Includes ------------------------------------------------------------------*/
  22:../ETH_Options/src/netconf.c **** #include <stdio.h>
  23:../ETH_Options/src/netconf.c **** #include "lwip/memp.h"
  24:../ETH_Options/src/netconf.c **** #include "ethernetif.h"
  25:../ETH_Options/src/netconf.c **** #include "lwip/tcp.h"
  26:../ETH_Options/src/netconf.c **** #include "netif/etharp.h"
  27:../ETH_Options/src/netconf.c **** #include "netconf.h"
  28:../ETH_Options/src/netconf.c **** #include "stm32f107_eth_bsp.h"
  29:../ETH_Options/src/netconf.c **** #include "stm32_eth.h"
  30:../ETH_Options/src/netconf.c **** #include "lwip/tcp_impl.h"
  31:../ETH_Options/src/netconf.c **** 
  32:../ETH_Options/src/netconf.c **** void ETH_CheckLink()
  33:../ETH_Options/src/netconf.c **** {
  32              		.loc 1 33 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 82B0     		sub	sp, sp, #8
  41              		.cfi_def_cfa_offset 16
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  34:../ETH_Options/src/netconf.c **** 	u16_t link = ETH_ReadPHYRegister(PHY_ADDRESS, PHY_BSR);
  44              		.loc 1 34 0
  45 0006 0020     		movs	r0, #0
  46 0008 0121     		movs	r1, #1
  47 000a FFF7FEFF 		bl	ETH_ReadPHYRegister
  48 000e 0346     		mov	r3, r0
  49 0010 FB80     		strh	r3, [r7, #6]	@ movhi
  35:../ETH_Options/src/netconf.c **** 	if(link != ETH_ERROR)
  50              		.loc 1 35 0
  51 0012 FB88     		ldrh	r3, [r7, #6]
  52 0014 002B     		cmp	r3, #0
  53 0016 18D0     		beq	.L1
  36:../ETH_Options/src/netconf.c **** 	{
  37:../ETH_Options/src/netconf.c **** 		if(!(link & PHY_Linked_Status))
  54              		.loc 1 37 0
  55 0018 FB88     		ldrh	r3, [r7, #6]
  56 001a 03F00403 		and	r3, r3, #4
  57 001e 002B     		cmp	r3, #0
  58 0020 02D1     		bne	.L3
  38:../ETH_Options/src/netconf.c **** 		  netif_set_link_down(&xnetif);
  59              		.loc 1 38 0
  60 0022 0B48     		ldr	r0, .L4
  61 0024 FFF7FEFF 		bl	netif_set_link_down
  62              	.L3:
  39:../ETH_Options/src/netconf.c **** 		if((link & PHY_Linked_Status) && (!netif_is_link_up(&xnetif)))
  63              		.loc 1 39 0
  64 0028 FB88     		ldrh	r3, [r7, #6]
  65 002a 03F00403 		and	r3, r3, #4
  66 002e 002B     		cmp	r3, #0
  67 0030 0BD0     		beq	.L1
  68              		.loc 1 39 0 is_stmt 0 discriminator 1
  69 0032 074B     		ldr	r3, .L4
  70 0034 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
  71 0038 03F01003 		and	r3, r3, #16
  72 003c 002B     		cmp	r3, #0
  73 003e 04D1     		bne	.L1
  40:../ETH_Options/src/netconf.c **** 		{
  41:../ETH_Options/src/netconf.c **** 			ETH_WaitLink();
  74              		.loc 1 41 0 is_stmt 1
  75 0040 FFF7FEFF 		bl	ETH_WaitLink
  42:../ETH_Options/src/netconf.c **** 		   netif_set_link_up(&xnetif);
  76              		.loc 1 42 0
  77 0044 0248     		ldr	r0, .L4
  78 0046 FFF7FEFF 		bl	netif_set_link_up
  79              	.L1:
  43:../ETH_Options/src/netconf.c **** 		}
  44:../ETH_Options/src/netconf.c **** 	}
  45:../ETH_Options/src/netconf.c **** }
  80              		.loc 1 45 0
  81 004a 0837     		adds	r7, r7, #8
  82              		.cfi_def_cfa_offset 8
  83 004c BD46     		mov	sp, r7
  84              		.cfi_def_cfa_register 13
  85              		@ sp needed
  86 004e 80BD     		pop	{r7, pc}
  87              	.L5:
  88              		.align	2
  89              	.L4:
  90 0050 00000000 		.word	xnetif
  91              		.cfi_endproc
  92              	.LFE29:
  94              		.section	.text.ETH_Timers,"ax",%progbits
  95              		.align	2
  96              		.global	ETH_Timers
  97              		.thumb
  98              		.thumb_func
 100              	ETH_Timers:
 101              	.LFB30:
  46:../ETH_Options/src/netconf.c **** 
  47:../ETH_Options/src/netconf.c **** void ETH_Timers()
  48:../ETH_Options/src/netconf.c **** {
 102              		.loc 1 48 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
  49:../ETH_Options/src/netconf.c **** 	static u8_t i = 0;
  50:../ETH_Options/src/netconf.c **** 	tcp_tmr();
 112              		.loc 1 50 0
 113 0004 FFF7FEFF 		bl	tcp_tmr
  51:../ETH_Options/src/netconf.c **** 
  52:../ETH_Options/src/netconf.c **** 	if(i == (ARP_TMR_INTERVAL/TCP_TMR_INTERVAL))
 114              		.loc 1 52 0
 115 0008 094B     		ldr	r3, .L8
 116 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 117 000c 142B     		cmp	r3, #20
 118 000e 04D1     		bne	.L7
  53:../ETH_Options/src/netconf.c **** 	{
  54:../ETH_Options/src/netconf.c **** 		etharp_tmr();
 119              		.loc 1 54 0
 120 0010 FFF7FEFF 		bl	etharp_tmr
  55:../ETH_Options/src/netconf.c **** 		i = 0;
 121              		.loc 1 55 0
 122 0014 064B     		ldr	r3, .L8
 123 0016 0022     		movs	r2, #0
 124 0018 1A70     		strb	r2, [r3]
 125              	.L7:
  56:../ETH_Options/src/netconf.c **** 	}
  57:../ETH_Options/src/netconf.c **** 	delay_ms(TCP_TMR_INTERVAL);
 126              		.loc 1 57 0
 127 001a FA20     		movs	r0, #250
 128 001c FFF7FEFF 		bl	delay_ms
  58:../ETH_Options/src/netconf.c **** 	i++;
 129              		.loc 1 58 0
 130 0020 034B     		ldr	r3, .L8
 131 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 0024 0133     		adds	r3, r3, #1
 133 0026 DAB2     		uxtb	r2, r3
 134 0028 014B     		ldr	r3, .L8
 135 002a 1A70     		strb	r2, [r3]
  59:../ETH_Options/src/netconf.c **** }
 136              		.loc 1 59 0
 137 002c 80BD     		pop	{r7, pc}
 138              	.L9:
 139 002e 00BF     		.align	2
 140              	.L8:
 141 0030 04000000 		.word	i.7356
 142              		.cfi_endproc
 143              	.LFE30:
 145              		.section	.text.LwIP_Pkt_Handle,"ax",%progbits
 146              		.align	2
 147              		.global	LwIP_Pkt_Handle
 148              		.thumb
 149              		.thumb_func
 151              	LwIP_Pkt_Handle:
 152              	.LFB31:
  60:../ETH_Options/src/netconf.c **** /**
  61:../ETH_Options/src/netconf.c ****   * @brief  Initializes the lwIP stack
  62:../ETH_Options/src/netconf.c ****   * @param  None
  63:../ETH_Options/src/netconf.c ****   * @retval None
  64:../ETH_Options/src/netconf.c ****   */
  65:../ETH_Options/src/netconf.c **** void LwIP_Pkt_Handle(void)
  66:../ETH_Options/src/netconf.c **** {
 153              		.loc 1 66 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 80B5     		push	{r7, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
  67:../ETH_Options/src/netconf.c ****   /* Read a received packet from the Ethernet buffers and send it to the lwIP for handling */
  68:../ETH_Options/src/netconf.c ****   ethernetif_input(&xnetif);
 163              		.loc 1 68 0
 164 0004 0148     		ldr	r0, .L11
 165 0006 FFF7FEFF 		bl	ethernetif_input
  69:../ETH_Options/src/netconf.c **** }
 166              		.loc 1 69 0
 167 000a 80BD     		pop	{r7, pc}
 168              	.L12:
 169              		.align	2
 170              	.L11:
 171 000c 00000000 		.word	xnetif
 172              		.cfi_endproc
 173              	.LFE31:
 175              		.section	.text.lwip_link_callback,"ax",%progbits
 176              		.align	2
 177              		.global	lwip_link_callback
 178              		.thumb
 179              		.thumb_func
 181              	lwip_link_callback:
 182              	.LFB32:
  70:../ETH_Options/src/netconf.c **** 
  71:../ETH_Options/src/netconf.c **** void lwip_link_callback(struct netif *netif )
  72:../ETH_Options/src/netconf.c **** {
 183              		.loc 1 72 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 82B0     		sub	sp, sp, #8
 192              		.cfi_def_cfa_offset 16
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 195 0006 7860     		str	r0, [r7, #4]
  73:../ETH_Options/src/netconf.c **** 	 if (netif_is_link_up(netif))
 196              		.loc 1 73 0
 197 0008 7B68     		ldr	r3, [r7, #4]
 198 000a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 199 000e 03F01003 		and	r3, r3, #16
 200 0012 002B     		cmp	r3, #0
 201 0014 05D0     		beq	.L14
  74:../ETH_Options/src/netconf.c **** 	 {
  75:../ETH_Options/src/netconf.c **** 		 ETH_WaitLink();
 202              		.loc 1 75 0
 203 0016 FFF7FEFF 		bl	ETH_WaitLink
  76:../ETH_Options/src/netconf.c **** 		 netif_set_up(netif);
 204              		.loc 1 76 0
 205 001a 7868     		ldr	r0, [r7, #4]
 206 001c FFF7FEFF 		bl	netif_set_up
 207 0020 02E0     		b	.L13
 208              	.L14:
  77:../ETH_Options/src/netconf.c **** 	 }
  78:../ETH_Options/src/netconf.c **** 	 else
  79:../ETH_Options/src/netconf.c **** 		 netif_set_down(netif);
 209              		.loc 1 79 0
 210 0022 7868     		ldr	r0, [r7, #4]
 211 0024 FFF7FEFF 		bl	netif_set_down
 212              	.L13:
  80:../ETH_Options/src/netconf.c **** }
 213              		.loc 1 80 0
 214 0028 0837     		adds	r7, r7, #8
 215              		.cfi_def_cfa_offset 8
 216 002a BD46     		mov	sp, r7
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 002c 80BD     		pop	{r7, pc}
 220              		.cfi_endproc
 221              	.LFE32:
 223 002e 00BF     		.section	.rodata
 224              		.align	2
 225              	.LC0:
 226 0000 00       		.byte	0
 227 0001 24       		.byte	36
 228 0002 B5       		.byte	-75
 229 0003 86       		.byte	-122
 230 0004 79       		.byte	121
 231 0005 53       		.byte	83
 232              		.section	.text.LwIP_Init,"ax",%progbits
 233              		.align	2
 234              		.global	LwIP_Init
 235              		.thumb
 236              		.thumb_func
 238              	LwIP_Init:
 239              	.LFB33:
  81:../ETH_Options/src/netconf.c **** 
  82:../ETH_Options/src/netconf.c **** void LwIP_Init()
  83:../ETH_Options/src/netconf.c **** {
 240              		.loc 1 83 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 24
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 90B5     		push	{r4, r7, lr}
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 8BB0     		sub	sp, sp, #44
 250              		.cfi_def_cfa_offset 56
 251 0004 04AF     		add	r7, sp, #16
 252              		.cfi_def_cfa 7, 40
  84:../ETH_Options/src/netconf.c **** 	struct ip_addr ipaddr;
  85:../ETH_Options/src/netconf.c **** 	struct ip_addr netmask;
  86:../ETH_Options/src/netconf.c **** 	struct ip_addr gw;
  87:../ETH_Options/src/netconf.c **** 	uint8_t macaddress[6]={0x00, 0x24, 0xB5, 0x86, 0x79, 0x53};
 253              		.loc 1 87 0
 254 0006 154A     		ldr	r2, .L17
 255 0008 3B1D     		adds	r3, r7, #4
 256 000a 1068     		ldr	r0, [r2]	@ unaligned
 257 000c 1860     		str	r0, [r3]	@ unaligned
 258 000e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 259 0010 9A80     		strh	r2, [r3, #4]	@ unaligned
  88:../ETH_Options/src/netconf.c **** 	/* Initializes the dynamic memory heap defined by MEM_SIZE.*/
  89:../ETH_Options/src/netconf.c **** 	mem_init();
 260              		.loc 1 89 0
 261 0012 FFF7FEFF 		bl	mem_init
  90:../ETH_Options/src/netconf.c **** 
  91:../ETH_Options/src/netconf.c **** 	/* Initializes the memory pools defined by MEMP_NUM_x.*/
  92:../ETH_Options/src/netconf.c **** 	memp_init();
 262              		.loc 1 92 0
 263 0016 FFF7FEFF 		bl	memp_init
  93:../ETH_Options/src/netconf.c **** 
  94:../ETH_Options/src/netconf.c **** 	Set_MAC_Address(macaddress);
 264              		.loc 1 94 0
 265 001a 3B1D     		adds	r3, r7, #4
 266 001c 1846     		mov	r0, r3
 267 001e FFF7FEFF 		bl	Set_MAC_Address
  95:../ETH_Options/src/netconf.c **** 
  96:../ETH_Options/src/netconf.c **** 	IP4_ADDR(&ipaddr,  192, 168,   0,  88);
 268              		.loc 1 96 0
 269 0022 0F4B     		ldr	r3, .L17+4
 270 0024 7B61     		str	r3, [r7, #20]
  97:../ETH_Options/src/netconf.c **** 	IP4_ADDR(&netmask, 255, 255, 255,   0);
 271              		.loc 1 97 0
 272 0026 6FF07F43 		mvn	r3, #-16777216
 273 002a 3B61     		str	r3, [r7, #16]
  98:../ETH_Options/src/netconf.c **** 	IP4_ADDR(&gw,      192, 168,   0,   1);
 274              		.loc 1 98 0
 275 002c 0D4B     		ldr	r3, .L17+8
 276 002e FB60     		str	r3, [r7, #12]
  99:../ETH_Options/src/netconf.c **** 
 100:../ETH_Options/src/netconf.c **** 	/*
 101:../ETH_Options/src/netconf.c **** 	Adds your network interface to the netif_list. Allocate a struct
 102:../ETH_Options/src/netconf.c **** 	netif and pass a pointer to this structure as the first argument.
 103:../ETH_Options/src/netconf.c **** 	Give pointers to cleared ip_addr structures when using DHCP,
 104:../ETH_Options/src/netconf.c **** 	or fill them with sane numbers otherwise. The state pointer may be NULL.
 105:../ETH_Options/src/netconf.c **** 
 106:../ETH_Options/src/netconf.c **** 	The init function pointer must point to a initialization function for
 107:../ETH_Options/src/netconf.c **** 	your ethernet netif interface. The following code illustrates it's use.*/
 108:../ETH_Options/src/netconf.c **** 
 109:../ETH_Options/src/netconf.c **** 	netif_add(&xnetif, &ipaddr, &netmask, &gw, NULL, &ethernetif_init, &ethernet_input);
 277              		.loc 1 109 0
 278 0030 07F11401 		add	r1, r7, #20
 279 0034 07F11002 		add	r2, r7, #16
 280 0038 07F10C04 		add	r4, r7, #12
 281 003c 0023     		movs	r3, #0
 282 003e 0093     		str	r3, [sp]
 283 0040 094B     		ldr	r3, .L17+12
 284 0042 0193     		str	r3, [sp, #4]
 285 0044 094B     		ldr	r3, .L17+16
 286 0046 0293     		str	r3, [sp, #8]
 287 0048 0948     		ldr	r0, .L17+20
 288 004a 2346     		mov	r3, r4
 289 004c FFF7FEFF 		bl	netif_add
 110:../ETH_Options/src/netconf.c **** 	/*  Registers the default network interface. */
 111:../ETH_Options/src/netconf.c **** 	netif_set_default(&xnetif);
 290              		.loc 1 111 0
 291 0050 0748     		ldr	r0, .L17+20
 292 0052 FFF7FEFF 		bl	netif_set_default
 112:../ETH_Options/src/netconf.c **** 	//netif_set_link_callback(&xnetif, lwip_link_callback);
 113:../ETH_Options/src/netconf.c **** }
 293              		.loc 1 113 0
 294 0056 1C37     		adds	r7, r7, #28
 295              		.cfi_def_cfa_offset 12
 296 0058 BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 005a 90BD     		pop	{r4, r7, pc}
 300              	.L18:
 301              		.align	2
 302              	.L17:
 303 005c 00000000 		.word	.LC0
 304 0060 C0A80058 		.word	1476438208
 305 0064 C0A80001 		.word	16820416
 306 0068 00000000 		.word	ethernetif_init
 307 006c 00000000 		.word	ethernet_input
 308 0070 00000000 		.word	xnetif
 309              		.cfi_endproc
 310              	.LFE33:
 312              		.bss
 313              	i.7356:
 314 0004 00       		.space	1
 315              		.text
 316              	.Letext0:
 317              		.file 2 "f:\\eclipse\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 318              		.file 3 "f:\\eclipse\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 319              		.file 4 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\port/arch/cc.h"
 320              		.file 5 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/err.h"
 321              		.file 6 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include\\ipv4/lwip/
 322              		.file 7 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/pbuf.h
 323              		.file 8 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/netif.
 324              		.file 9 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\inc/stm32f107.h"
 325              		.file 10 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\ETH_Options\\inc/netconf.h"
 326              		.file 11 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\cmsis/core_cm3.h"
 327              		.file 12 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\cmsis/stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 netconf.c
                            *COM*:00000030 xnetif
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:20     .bss:00000000 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:21     .bss:00000000 UID
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:24     .text.ETH_CheckLink:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:29     .text.ETH_CheckLink:00000000 ETH_CheckLink
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:90     .text.ETH_CheckLink:00000050 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:95     .text.ETH_Timers:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:100    .text.ETH_Timers:00000000 ETH_Timers
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:141    .text.ETH_Timers:00000030 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:313    .bss:00000004 i.7356
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:146    .text.LwIP_Pkt_Handle:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:151    .text.LwIP_Pkt_Handle:00000000 LwIP_Pkt_Handle
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:171    .text.LwIP_Pkt_Handle:0000000c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:176    .text.lwip_link_callback:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:181    .text.lwip_link_callback:00000000 lwip_link_callback
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:224    .rodata:00000000 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:233    .text.LwIP_Init:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:238    .text.LwIP_Init:00000000 LwIP_Init
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cceaygno.s:303    .text.LwIP_Init:0000005c $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.2d80f1b5ce3c69d13e258577ddf29668
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.stddef.h.39.7e3d906ac58942e0b374c527445f5de5
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.types.h.24.b2be5f53932a9c9d07787288b29b6d75
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.82.82b71f3f44c70e3a459d0f66642b05eb
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.68.ff6d7571d3ad75c55f15e26dbaa81e35
                           .group:00000000 wm4.lwipopts.h.25.76e03deb318fbe54d896a83c1b611e55
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.0ec64ad8cd52614da6479c7936fa3efa
                           .group:00000000 wm4.cc.h.49.217a0c46a6dd8448cb36cccbf00f897f
                           .group:00000000 wm4.arch.h.52.2e97dbd839a1aa815d8c47878a7f8e2b
                           .group:00000000 wm4.debug.h.45.223028a5c052c9f879ffd43dd519f3f1
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.opt.h.76.0e16bb9c23144e1f631b5b5afa9a69f6
                           .group:00000000 wm4.memp_std.h.15.637bb4287b70e9d70dbd8dd3c6f62f3b
                           .group:00000000 wm4.err.h.33.909ff4b35439192d64931f0a04fc8fdb
                           .group:00000000 wm4.netif.h.33.e68fa2fc48174dad7292f51867e80534
                           .group:00000000 wm4.def.h.33.d4208c3cd3e0fc64e20a8b9f95a681f3
                           .group:00000000 wm4.ip_addr.h.92.064dfb1f61acc5ba1dffbdba3104a668
                           .group:00000000 wm4.pbuf.h.34.bb639510af5bfdff8eae9cce62bf5909
                           .group:00000000 wm4.netif.h.61.25a4ec33204158dc7a027270d7b19690
                           .group:00000000 wm4.mem.h.33.ae21028c0b1f3dc3305003fc71edaf5a
                           .group:00000000 wm4.ip.h.33.cd1106783490741294b06617fff8c08f
                           .group:00000000 wm4.icmp.h.33.9c8da59f6edf08fae1a2f37336a6e965
                           .group:00000000 wm4.tcp.h.148.20c69d62fcb119a5d6bfd32bc982e4fb
                           .group:00000000 wm4.etharp.h.36.01a1086ca2aee91a18155b6f03ca98c6
                           .group:00000000 wm4.stm32f10x.h.51.6e18fa0f6016a7ea66d7cfe7c3be3cd1
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.34c9721dbd76a587b38991fd58e2fdab
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.cb32a32bef653f9e9414120b411eb1bf
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32_eth.h.24.7a0b21bef5d3edb1ede8055003395f4a
                           .group:00000000 wm4.tcp_impl.h.33.0ce3dbbff4845a48c2d719f24d1c5713

UNDEFINED SYMBOLS
ETH_ReadPHYRegister
netif_set_link_down
ETH_WaitLink
netif_set_link_up
tcp_tmr
etharp_tmr
delay_ms
ethernetif_input
netif_set_up
netif_set_down
mem_init
memp_init
Set_MAC_Address
netif_add
netif_set_default
ethernetif_init
ethernet_input
