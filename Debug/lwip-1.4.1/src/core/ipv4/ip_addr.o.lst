   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ip_addr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ip_addr_any
  19              		.section	.rodata
  20              		.align	2
  23              	ip_addr_any:
  24 0000 00000000 		.space	4
  25              		.global	ip_addr_broadcast
  26              		.align	2
  29              	ip_addr_broadcast:
  30 0004 FFFFFFFF 		.word	-1
  31              		.section	.text.ip4_addr_isbroadcast,"ax",%progbits
  32              		.align	2
  33              		.global	ip4_addr_isbroadcast
  34              		.thumb
  35              		.thumb_func
  37              	ip4_addr_isbroadcast:
  38              	.LFB0:
  39              		.file 1 "../lwip-1.4.1/src/core/ipv4/ip_addr.c"
   1:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /**
   2:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @file
   3:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * This is the IPv4 address tools implementation.
   4:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
   5:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
   6:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
   7:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /*
   8:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * All rights reserved. 
  10:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * 
  11:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Redistribution and use in source and binary forms, with or without modification, 
  12:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * are permitted provided that the following conditions are met:
  13:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
  14:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  15:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *    this list of conditions and the following disclaimer.
  16:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *    and/or other materials provided with the distribution.
  19:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * 3. The name of the author may not be used to endorse or promote products
  20:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *    derived from this software without specific prior written permission. 
  21:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
  22:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED 
  23:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  24:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
  25:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
  26:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
  27:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  28:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  29:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
  30:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  31:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * OF SUCH DAMAGE.
  32:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
  33:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * This file is part of the lwIP TCP/IP stack.
  34:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * 
  35:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Author: Adam Dunkels <adam@sics.se>
  36:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
  37:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
  38:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
  39:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #include "lwip/opt.h"
  40:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #include "lwip/ip_addr.h"
  41:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #include "lwip/netif.h"
  42:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
  43:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /* used by IP_ADDR_ANY and IP_ADDR_BROADCAST in ip_addr.h */
  44:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** const ip_addr_t ip_addr_any = { IPADDR_ANY };
  45:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** const ip_addr_t ip_addr_broadcast = { IPADDR_BROADCAST };
  46:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
  47:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /**
  48:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Determine if an address is a broadcast address on a network interface 
  49:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * 
  50:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param addr address to be checked
  51:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param netif the network interface against which the address is checked
  52:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @return returns non-zero if the address is a broadcast address
  53:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
  54:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** u8_t
  55:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** ip4_addr_isbroadcast(u32_t addr, const struct netif *netif)
  56:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** {
  40              		.loc 1 56 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 16
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44              		@ link register save eliminated.
  45 0000 80B4     		push	{r7}
  46              		.cfi_def_cfa_offset 4
  47              		.cfi_offset 7, -4
  48 0002 85B0     		sub	sp, sp, #20
  49              		.cfi_def_cfa_offset 24
  50 0004 00AF     		add	r7, sp, #0
  51              		.cfi_def_cfa_register 7
  52 0006 7860     		str	r0, [r7, #4]
  53 0008 3960     		str	r1, [r7]
  57:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   ip_addr_t ipaddr;
  58:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   ip4_addr_set_u32(&ipaddr, addr);
  54              		.loc 1 58 0
  55 000a 7B68     		ldr	r3, [r7, #4]
  56 000c FB60     		str	r3, [r7, #12]
  59:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
  60:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /* all ones (broadcast) or all zeroes (old skool broadcast) */
  61:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   if ((~addr == IPADDR_ANY) ||
  57              		.loc 1 61 0
  58 000e 7B68     		ldr	r3, [r7, #4]
  59 0010 B3F1FF3F 		cmp	r3, #-1
  60 0014 02D0     		beq	.L2
  61              		.loc 1 61 0 is_stmt 0 discriminator 1
  62 0016 7B68     		ldr	r3, [r7, #4]
  63 0018 002B     		cmp	r3, #0
  64 001a 01D1     		bne	.L3
  65              	.L2:
  62:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       (addr == IPADDR_ANY)) {
  63:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return 1;
  66              		.loc 1 63 0 is_stmt 1
  67 001c 0123     		movs	r3, #1
  68 001e 25E0     		b	.L8
  69              	.L3:
  64:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /* no broadcast support on this network interface? */
  65:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   } else if ((netif->flags & NETIF_FLAG_BROADCAST) == 0) {
  70              		.loc 1 65 0
  71 0020 3B68     		ldr	r3, [r7]
  72 0022 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
  73 0026 03F00203 		and	r3, r3, #2
  74 002a 002B     		cmp	r3, #0
  75 002c 01D1     		bne	.L5
  66:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     /* the given address cannot be a broadcast address
  67:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****      * nor can we check against any broadcast addresses */
  68:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return 0;
  76              		.loc 1 68 0
  77 002e 0023     		movs	r3, #0
  78 0030 1CE0     		b	.L8
  79              	.L5:
  69:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /* address matches network interface address exactly? => no broadcast */
  70:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   } else if (addr == ip4_addr_get_u32(&netif->ip_addr)) {
  80              		.loc 1 70 0
  81 0032 3B68     		ldr	r3, [r7]
  82 0034 5A68     		ldr	r2, [r3, #4]
  83 0036 7B68     		ldr	r3, [r7, #4]
  84 0038 9A42     		cmp	r2, r3
  85 003a 01D1     		bne	.L6
  71:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return 0;
  86              		.loc 1 71 0
  87 003c 0023     		movs	r3, #0
  88 003e 15E0     		b	.L8
  89              	.L6:
  72:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /*  on the same (sub) network... */
  73:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   } else if (ip_addr_netcmp(&ipaddr, &(netif->ip_addr), &(netif->netmask))
  90              		.loc 1 73 0
  91 0040 FA68     		ldr	r2, [r7, #12]
  92 0042 3B68     		ldr	r3, [r7]
  93 0044 5B68     		ldr	r3, [r3, #4]
  94 0046 5A40     		eors	r2, r2, r3
  95 0048 3B68     		ldr	r3, [r7]
  96 004a 9B68     		ldr	r3, [r3, #8]
  97 004c 1340     		ands	r3, r3, r2
  98 004e 002B     		cmp	r3, #0
  99 0050 0BD1     		bne	.L7
  74:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****          /* ...and host identifier bits are all ones? =>... */
  75:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****           && ((addr & ~ip4_addr_get_u32(&netif->netmask)) ==
 100              		.loc 1 75 0
 101 0052 3B68     		ldr	r3, [r7]
 102 0054 9B68     		ldr	r3, [r3, #8]
 103 0056 DA43     		mvns	r2, r3
 104 0058 7B68     		ldr	r3, [r7, #4]
 105 005a 1A40     		ands	r2, r2, r3
  76:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****            (IPADDR_BROADCAST & ~ip4_addr_get_u32(&netif->netmask)))) {
 106              		.loc 1 76 0
 107 005c 3B68     		ldr	r3, [r7]
 108 005e 9B68     		ldr	r3, [r3, #8]
 109 0060 DB43     		mvns	r3, r3
  75:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****            (IPADDR_BROADCAST & ~ip4_addr_get_u32(&netif->netmask)))) {
 110              		.loc 1 75 0
 111 0062 9A42     		cmp	r2, r3
 112 0064 01D1     		bne	.L7
  77:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     /* => network broadcast address */
  78:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return 1;
 113              		.loc 1 78 0
 114 0066 0123     		movs	r3, #1
 115 0068 00E0     		b	.L8
 116              	.L7:
  79:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   } else {
  80:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return 0;
 117              		.loc 1 80 0
 118 006a 0023     		movs	r3, #0
 119              	.L8:
  81:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
  82:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** }
 120              		.loc 1 82 0 discriminator 1
 121 006c 1846     		mov	r0, r3
 122 006e 1437     		adds	r7, r7, #20
 123              		.cfi_def_cfa_offset 4
 124 0070 BD46     		mov	sp, r7
 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 0072 5DF8047B 		ldr	r7, [sp], #4
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 0076 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE0:
 134              		.section	.text.ip4_addr_netmask_valid,"ax",%progbits
 135              		.align	2
 136              		.global	ip4_addr_netmask_valid
 137              		.thumb
 138              		.thumb_func
 140              	ip4_addr_netmask_valid:
 141              	.LFB1:
  83:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
  84:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /** Checks if a netmask is valid (starting with ones, then only zeros)
  85:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
  86:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param netmask the IPv4 netmask to check (in network byte order!)
  87:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @return 1 if the netmask is valid, 0 if it is not
  88:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
  89:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** u8_t
  90:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** ip4_addr_netmask_valid(u32_t netmask)
  91:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** {
 142              		.loc 1 91 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 16
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 84B0     		sub	sp, sp, #16
 151              		.cfi_def_cfa_offset 24
 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 154 0006 7860     		str	r0, [r7, #4]
  92:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u32_t mask;
  93:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u32_t nm_hostorder = lwip_htonl(netmask);
 155              		.loc 1 93 0
 156 0008 7868     		ldr	r0, [r7, #4]
 157 000a FFF7FEFF 		bl	lwip_htonl
 158 000e B860     		str	r0, [r7, #8]
  94:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
  95:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /* first, check for the first zero */
  96:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   for (mask = 1UL << 31 ; mask != 0; mask >>= 1) {
 159              		.loc 1 96 0
 160 0010 4FF00043 		mov	r3, #-2147483648
 161 0014 FB60     		str	r3, [r7, #12]
 162 0016 08E0     		b	.L10
 163              	.L13:
  97:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if ((nm_hostorder & mask) == 0) {
 164              		.loc 1 97 0
 165 0018 BA68     		ldr	r2, [r7, #8]
 166 001a FB68     		ldr	r3, [r7, #12]
 167 001c 1340     		ands	r3, r3, r2
 168 001e 002B     		cmp	r3, #0
 169 0020 00D1     		bne	.L11
  98:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       break;
 170              		.loc 1 98 0
 171 0022 05E0     		b	.L12
 172              	.L11:
  96:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if ((nm_hostorder & mask) == 0) {
 173              		.loc 1 96 0 discriminator 2
 174 0024 FB68     		ldr	r3, [r7, #12]
 175 0026 5B08     		lsrs	r3, r3, #1
 176 0028 FB60     		str	r3, [r7, #12]
 177              	.L10:
  96:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if ((nm_hostorder & mask) == 0) {
 178              		.loc 1 96 0 is_stmt 0 discriminator 1
 179 002a FB68     		ldr	r3, [r7, #12]
 180 002c 002B     		cmp	r3, #0
 181 002e F3D1     		bne	.L13
 182              	.L12:
  99:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 100:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 101:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /* then check that there is no one */
 102:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   for (; mask != 0; mask >>= 1) {
 183              		.loc 1 102 0 is_stmt 1 discriminator 1
 184 0030 09E0     		b	.L14
 185              	.L17:
 103:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if ((nm_hostorder & mask) != 0) {
 186              		.loc 1 103 0
 187 0032 BA68     		ldr	r2, [r7, #8]
 188 0034 FB68     		ldr	r3, [r7, #12]
 189 0036 1340     		ands	r3, r3, r2
 190 0038 002B     		cmp	r3, #0
 191 003a 01D0     		beq	.L15
 104:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       /* there is a one after the first zero -> invalid */
 105:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       return 0;
 192              		.loc 1 105 0
 193 003c 0023     		movs	r3, #0
 194 003e 06E0     		b	.L16
 195              	.L15:
 102:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if ((nm_hostorder & mask) != 0) {
 196              		.loc 1 102 0
 197 0040 FB68     		ldr	r3, [r7, #12]
 198 0042 5B08     		lsrs	r3, r3, #1
 199 0044 FB60     		str	r3, [r7, #12]
 200              	.L14:
 102:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if ((nm_hostorder & mask) != 0) {
 201              		.loc 1 102 0 is_stmt 0 discriminator 1
 202 0046 FB68     		ldr	r3, [r7, #12]
 203 0048 002B     		cmp	r3, #0
 204 004a F2D1     		bne	.L17
 106:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 107:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 108:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /* no one after the first zero -> valid */
 109:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   return 1;
 205              		.loc 1 109 0 is_stmt 1
 206 004c 0123     		movs	r3, #1
 207              	.L16:
 110:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** }
 208              		.loc 1 110 0
 209 004e 1846     		mov	r0, r3
 210 0050 1037     		adds	r7, r7, #16
 211              		.cfi_def_cfa_offset 8
 212 0052 BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0054 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE1:
 219 0056 00BF     		.section	.text.ipaddr_addr,"ax",%progbits
 220              		.align	2
 221              		.global	ipaddr_addr
 222              		.thumb
 223              		.thumb_func
 225              	ipaddr_addr:
 226              	.LFB2:
 111:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 112:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /* Here for now until needed in other places in lwIP */
 113:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #ifndef isprint
 114:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #define in_range(c, lo, up)  ((u8_t)c >= lo && (u8_t)c <= up)
 115:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #define isprint(c)           in_range(c, 0x20, 0x7f)
 116:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #define isdigit(c)           in_range(c, '0', '9')
 117:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #define isxdigit(c)          (isdigit(c) || in_range(c, 'a', 'f') || in_range(c, 'A', 'F'))
 118:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #define islower(c)           in_range(c, 'a', 'z')
 119:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #define isspace(c)           (c == ' ' || c == '\f' || c == '\n' || c == '\r' || c == '\t' || c == 
 120:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** #endif
 121:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 122:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /**
 123:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Ascii internet address interpretation routine.
 124:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * The value returned is in network order.
 125:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
 126:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param cp IP address in ascii represenation (e.g. "127.0.0.1")
 127:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @return ip address in network order
 128:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
 129:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** u32_t
 130:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** ipaddr_addr(const char *cp)
 131:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** {
 227              		.loc 1 131 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 16
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 132:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   ip_addr_t val;
 133:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 134:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   if (ipaddr_aton(cp, &val)) {
 240              		.loc 1 134 0
 241 0008 07F10C03 		add	r3, r7, #12
 242 000c 7868     		ldr	r0, [r7, #4]
 243 000e 1946     		mov	r1, r3
 244 0010 FFF7FEFF 		bl	ipaddr_aton
 245 0014 0346     		mov	r3, r0
 246 0016 002B     		cmp	r3, #0
 247 0018 01D0     		beq	.L19
 135:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return ip4_addr_get_u32(&val);
 248              		.loc 1 135 0
 249 001a FB68     		ldr	r3, [r7, #12]
 250 001c 01E0     		b	.L21
 251              	.L19:
 136:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 137:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   return (IPADDR_NONE);
 252              		.loc 1 137 0
 253 001e 4FF0FF33 		mov	r3, #-1
 254              	.L21:
 138:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** }
 255              		.loc 1 138 0 discriminator 1
 256 0022 1846     		mov	r0, r3
 257 0024 1037     		adds	r7, r7, #16
 258              		.cfi_def_cfa_offset 8
 259 0026 BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0028 80BD     		pop	{r7, pc}
 263              		.cfi_endproc
 264              	.LFE2:
 266 002a 00BF     		.section	.text.ipaddr_aton,"ax",%progbits
 267              		.align	2
 268              		.global	ipaddr_aton
 269              		.thumb
 270              		.thumb_func
 272              	ipaddr_aton:
 273              	.LFB3:
 139:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 140:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /**
 141:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Check whether "cp" is a valid ascii representation
 142:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * of an Internet address and convert to a binary address.
 143:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Returns 1 if the address is valid, 0 if not.
 144:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * This replaces inet_addr, the return value from which
 145:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * cannot distinguish between failure and a local broadcast address.
 146:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
 147:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param cp IP address in ascii represenation (e.g. "127.0.0.1")
 148:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param addr pointer to which to save the ip address in network order
 149:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @return 1 if cp could be converted to addr, 0 on failure
 150:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
 151:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** int
 152:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** ipaddr_aton(const char *cp, ip_addr_t *addr)
 153:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** {
 274              		.loc 1 153 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 40
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 8AB0     		sub	sp, sp, #40
 283              		.cfi_def_cfa_offset 48
 284 0004 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 286 0006 7860     		str	r0, [r7, #4]
 287 0008 3960     		str	r1, [r7]
 154:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u32_t val;
 155:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u8_t base;
 156:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   char c;
 157:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u32_t parts[4];
 158:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u32_t *pp = parts;
 288              		.loc 1 158 0
 289 000a 07F10C03 		add	r3, r7, #12
 290 000e FB61     		str	r3, [r7, #28]
 159:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 160:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   c = *cp;
 291              		.loc 1 160 0
 292 0010 7B68     		ldr	r3, [r7, #4]
 293 0012 1B78     		ldrb	r3, [r3]
 294 0014 87F82230 		strb	r3, [r7, #34]
 295              	.L41:
 161:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   for (;;) {
 162:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     /*
 163:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****      * Collect number up to ``.''.
 164:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****      * Values are specified as for C:
 165:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****      * 0x=hex, 0=octal, 1-9=decimal.
 166:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****      */
 167:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (!isdigit(c))
 296              		.loc 1 167 0
 297 0018 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 298 001c 2F2B     		cmp	r3, #47
 299 001e 03D9     		bls	.L23
 300              		.loc 1 167 0 is_stmt 0 discriminator 1
 301 0020 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 302 0024 392B     		cmp	r3, #57
 303 0026 01D9     		bls	.L24
 304              	.L23:
 168:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       return (0);
 305              		.loc 1 168 0 is_stmt 1
 306 0028 0023     		movs	r3, #0
 307 002a 00E1     		b	.L55
 308              	.L24:
 169:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     val = 0;
 309              		.loc 1 169 0
 310 002c 0023     		movs	r3, #0
 311 002e 7B62     		str	r3, [r7, #36]
 170:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     base = 10;
 312              		.loc 1 170 0
 313 0030 0A23     		movs	r3, #10
 314 0032 87F82330 		strb	r3, [r7, #35]
 171:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (c == '0') {
 315              		.loc 1 171 0
 316 0036 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 317 003a 302B     		cmp	r3, #48
 318 003c 1CD1     		bne	.L26
 172:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       c = *++cp;
 319              		.loc 1 172 0
 320 003e 7B68     		ldr	r3, [r7, #4]
 321 0040 0133     		adds	r3, r3, #1
 322 0042 7B60     		str	r3, [r7, #4]
 323 0044 7B68     		ldr	r3, [r7, #4]
 324 0046 1B78     		ldrb	r3, [r3]
 325 0048 87F82230 		strb	r3, [r7, #34]
 173:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       if (c == 'x' || c == 'X') {
 326              		.loc 1 173 0
 327 004c 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 328 0050 782B     		cmp	r3, #120
 329 0052 03D0     		beq	.L27
 330              		.loc 1 173 0 is_stmt 0 discriminator 1
 331 0054 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 332 0058 582B     		cmp	r3, #88
 333 005a 0AD1     		bne	.L28
 334              	.L27:
 174:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         base = 16;
 335              		.loc 1 174 0 is_stmt 1
 336 005c 1023     		movs	r3, #16
 337 005e 87F82330 		strb	r3, [r7, #35]
 175:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         c = *++cp;
 338              		.loc 1 175 0
 339 0062 7B68     		ldr	r3, [r7, #4]
 340 0064 0133     		adds	r3, r3, #1
 341 0066 7B60     		str	r3, [r7, #4]
 342 0068 7B68     		ldr	r3, [r7, #4]
 343 006a 1B78     		ldrb	r3, [r3]
 344 006c 87F82230 		strb	r3, [r7, #34]
 345 0070 02E0     		b	.L26
 346              	.L28:
 176:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       } else
 177:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         base = 8;
 347              		.loc 1 177 0
 348 0072 0823     		movs	r3, #8
 349 0074 87F82330 		strb	r3, [r7, #35]
 350              	.L26:
 178:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 179:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     for (;;) {
 180:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       if (isdigit(c)) {
 351              		.loc 1 180 0
 352 0078 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 353 007c 2F2B     		cmp	r3, #47
 354 007e 15D9     		bls	.L29
 355              		.loc 1 180 0 is_stmt 0 discriminator 1
 356 0080 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 357 0084 392B     		cmp	r3, #57
 358 0086 11D8     		bhi	.L29
 181:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         val = (val * base) + (int)(c - '0');
 359              		.loc 1 181 0 is_stmt 1
 360 0088 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 361 008c 7A6A     		ldr	r2, [r7, #36]
 362 008e 02FB03F2 		mul	r2, r2, r3
 363 0092 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 364 0096 1344     		add	r3, r3, r2
 365 0098 303B     		subs	r3, r3, #48
 366 009a 7B62     		str	r3, [r7, #36]
 182:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         c = *++cp;
 367              		.loc 1 182 0
 368 009c 7B68     		ldr	r3, [r7, #4]
 369 009e 0133     		adds	r3, r3, #1
 370 00a0 7B60     		str	r3, [r7, #4]
 371 00a2 7B68     		ldr	r3, [r7, #4]
 372 00a4 1B78     		ldrb	r3, [r3]
 373 00a6 87F82230 		strb	r3, [r7, #34]
 374 00aa 36E0     		b	.L30
 375              	.L29:
 183:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       } else if (base == 16 && isxdigit(c)) {
 376              		.loc 1 183 0
 377 00ac 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 378 00b0 102B     		cmp	r3, #16
 379 00b2 33D1     		bne	.L31
 380              		.loc 1 183 0 is_stmt 0 discriminator 1
 381 00b4 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 382 00b8 2F2B     		cmp	r3, #47
 383 00ba 03D9     		bls	.L32
 384              		.loc 1 183 0 discriminator 2
 385 00bc 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 386 00c0 392B     		cmp	r3, #57
 387 00c2 0FD9     		bls	.L33
 388              	.L32:
 389              		.loc 1 183 0 discriminator 4
 390 00c4 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 391 00c8 602B     		cmp	r3, #96
 392 00ca 03D9     		bls	.L34
 393              		.loc 1 183 0 discriminator 5
 394 00cc 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 395 00d0 662B     		cmp	r3, #102
 396 00d2 07D9     		bls	.L33
 397              	.L34:
 398              		.loc 1 183 0 discriminator 7
 399 00d4 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 400 00d8 402B     		cmp	r3, #64
 401 00da 1FD9     		bls	.L31
 402              		.loc 1 183 0 discriminator 8
 403 00dc 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 404 00e0 462B     		cmp	r3, #70
 405 00e2 1BD8     		bhi	.L31
 406              	.L33:
 184:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));
 407              		.loc 1 184 0 is_stmt 1
 408 00e4 7B6A     		ldr	r3, [r7, #36]
 409 00e6 1B01     		lsls	r3, r3, #4
 410 00e8 97F82220 		ldrb	r2, [r7, #34]	@ zero_extendqisi2
 411 00ec 02F10A01 		add	r1, r2, #10
 412 00f0 97F82220 		ldrb	r2, [r7, #34]	@ zero_extendqisi2
 413 00f4 602A     		cmp	r2, #96
 414 00f6 05D9     		bls	.L35
 415              		.loc 1 184 0 is_stmt 0 discriminator 1
 416 00f8 97F82220 		ldrb	r2, [r7, #34]	@ zero_extendqisi2
 417 00fc 7A2A     		cmp	r2, #122
 418 00fe 01D8     		bhi	.L35
 419              		.loc 1 184 0 discriminator 3
 420 0100 6122     		movs	r2, #97
 421 0102 00E0     		b	.L36
 422              	.L35:
 423              		.loc 1 184 0 discriminator 4
 424 0104 4122     		movs	r2, #65
 425              	.L36:
 426              		.loc 1 184 0 discriminator 6
 427 0106 8A1A     		subs	r2, r1, r2
 428 0108 1343     		orrs	r3, r3, r2
 429 010a 7B62     		str	r3, [r7, #36]
 185:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         c = *++cp;
 430              		.loc 1 185 0 is_stmt 1 discriminator 6
 431 010c 7B68     		ldr	r3, [r7, #4]
 432 010e 0133     		adds	r3, r3, #1
 433 0110 7B60     		str	r3, [r7, #4]
 434 0112 7B68     		ldr	r3, [r7, #4]
 435 0114 1B78     		ldrb	r3, [r3]
 436 0116 87F82230 		strb	r3, [r7, #34]
 437              	.L30:
 186:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       } else
 187:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         break;
 188:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 438              		.loc 1 188 0
 439 011a ADE7     		b	.L26
 440              	.L31:
 189:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (c == '.') {
 441              		.loc 1 189 0
 442 011c 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 443 0120 2E2B     		cmp	r3, #46
 444 0122 14D1     		bne	.L37
 190:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       /*
 191:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****        * Internet format:
 192:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****        *  a.b.c.d
 193:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****        *  a.b.c   (with c treated as 16 bits)
 194:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****        *  a.b (with b treated as 24 bits)
 195:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****        */
 196:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       if (pp >= parts + 3) {
 445              		.loc 1 196 0
 446 0124 07F10C03 		add	r3, r7, #12
 447 0128 0C33     		adds	r3, r3, #12
 448 012a FA69     		ldr	r2, [r7, #28]
 449 012c 9A42     		cmp	r2, r3
 450 012e 01D3     		bcc	.L38
 197:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         return (0);
 451              		.loc 1 197 0
 452 0130 0023     		movs	r3, #0
 453 0132 7CE0     		b	.L55
 454              	.L38:
 198:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       }
 199:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       *pp++ = val;
 455              		.loc 1 199 0
 456 0134 FB69     		ldr	r3, [r7, #28]
 457 0136 1A1D     		adds	r2, r3, #4
 458 0138 FA61     		str	r2, [r7, #28]
 459 013a 7A6A     		ldr	r2, [r7, #36]
 460 013c 1A60     		str	r2, [r3]
 200:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       c = *++cp;
 461              		.loc 1 200 0
 462 013e 7B68     		ldr	r3, [r7, #4]
 463 0140 0133     		adds	r3, r3, #1
 464 0142 7B60     		str	r3, [r7, #4]
 465 0144 7B68     		ldr	r3, [r7, #4]
 466 0146 1B78     		ldrb	r3, [r3]
 467 0148 87F82230 		strb	r3, [r7, #34]
 468 014c 05E0     		b	.L56
 469              	.L37:
 201:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     } else
 202:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       break;
 470              		.loc 1 202 0
 471 014e 00BF     		nop
 203:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 204:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /*
 205:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****    * Check for trailing characters.
 206:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****    */
 207:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   if (c != '\0' && !isspace(c)) {
 472              		.loc 1 207 0
 473 0150 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 474 0154 002B     		cmp	r3, #0
 475 0156 1BD0     		beq	.L42
 476 0158 00E0     		b	.L57
 477              	.L56:
 203:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 478              		.loc 1 203 0
 479 015a 5DE7     		b	.L41
 480              	.L57:
 481              		.loc 1 207 0 discriminator 1
 482 015c 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 483 0160 202B     		cmp	r3, #32
 484 0162 15D0     		beq	.L42
 485              		.loc 1 207 0 is_stmt 0 discriminator 2
 486 0164 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 487 0168 0C2B     		cmp	r3, #12
 488 016a 11D0     		beq	.L42
 489              		.loc 1 207 0 discriminator 3
 490 016c 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 491 0170 0A2B     		cmp	r3, #10
 492 0172 0DD0     		beq	.L42
 493              		.loc 1 207 0 discriminator 4
 494 0174 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 495 0178 0D2B     		cmp	r3, #13
 496 017a 09D0     		beq	.L42
 497              		.loc 1 207 0 discriminator 5
 498 017c 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 499 0180 092B     		cmp	r3, #9
 500 0182 05D0     		beq	.L42
 501              		.loc 1 207 0 discriminator 6
 502 0184 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 503 0188 0B2B     		cmp	r3, #11
 504 018a 01D0     		beq	.L42
 208:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return (0);
 505              		.loc 1 208 0 is_stmt 1
 506 018c 0023     		movs	r3, #0
 507 018e 4EE0     		b	.L55
 508              	.L42:
 209:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 210:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   /*
 211:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****    * Concoct the address according to
 212:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****    * the number of parts specified.
 213:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****    */
 214:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   switch (pp - parts + 1) {
 509              		.loc 1 214 0
 510 0190 FA69     		ldr	r2, [r7, #28]
 511 0192 07F10C03 		add	r3, r7, #12
 512 0196 D31A     		subs	r3, r2, r3
 513 0198 9B10     		asrs	r3, r3, #2
 514 019a 0133     		adds	r3, r3, #1
 515 019c 042B     		cmp	r3, #4
 516 019e 3BD8     		bhi	.L58
 517 01a0 01A2     		adr	r2, .L45
 518 01a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 519 01a6 00BF     		.p2align 2
 520              	.L45:
 521 01a8 BD010000 		.word	.L44+1
 522 01ac 19020000 		.word	.L58+1
 523 01b0 C1010000 		.word	.L47+1
 524 01b4 D9010000 		.word	.L48+1
 525 01b8 F7010000 		.word	.L49+1
 526              		.p2align 1
 527              	.L44:
 215:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 216:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   case 0:
 217:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     return (0);       /* initial nondigit */
 528              		.loc 1 217 0
 529 01bc 0023     		movs	r3, #0
 530 01be 36E0     		b	.L55
 531              	.L47:
 218:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 219:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   case 1:             /* a -- 32 bits */
 220:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     break;
 221:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 222:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   case 2:             /* a.b -- 8.24 bits */
 223:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (val > 0xffffffUL) {
 532              		.loc 1 223 0
 533 01c0 7B6A     		ldr	r3, [r7, #36]
 534 01c2 B3F1807F 		cmp	r3, #16777216
 535 01c6 01D3     		bcc	.L51
 224:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       return (0);
 536              		.loc 1 224 0
 537 01c8 0023     		movs	r3, #0
 538 01ca 30E0     		b	.L55
 539              	.L51:
 225:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 226:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     val |= parts[0] << 24;
 540              		.loc 1 226 0
 541 01cc FB68     		ldr	r3, [r7, #12]
 542 01ce 1B06     		lsls	r3, r3, #24
 543 01d0 7A6A     		ldr	r2, [r7, #36]
 544 01d2 1343     		orrs	r3, r3, r2
 545 01d4 7B62     		str	r3, [r7, #36]
 227:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     break;
 546              		.loc 1 227 0
 547 01d6 20E0     		b	.L50
 548              	.L48:
 228:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 229:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   case 3:             /* a.b.c -- 8.8.16 bits */
 230:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (val > 0xffff) {
 549              		.loc 1 230 0
 550 01d8 7B6A     		ldr	r3, [r7, #36]
 551 01da B3F5803F 		cmp	r3, #65536
 552 01de 01D3     		bcc	.L52
 231:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       return (0);
 553              		.loc 1 231 0
 554 01e0 0023     		movs	r3, #0
 555 01e2 24E0     		b	.L55
 556              	.L52:
 232:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 233:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     val |= (parts[0] << 24) | (parts[1] << 16);
 557              		.loc 1 233 0
 558 01e4 FB68     		ldr	r3, [r7, #12]
 559 01e6 1A06     		lsls	r2, r3, #24
 560 01e8 3B69     		ldr	r3, [r7, #16]
 561 01ea 1B04     		lsls	r3, r3, #16
 562 01ec 1343     		orrs	r3, r3, r2
 563 01ee 7A6A     		ldr	r2, [r7, #36]
 564 01f0 1343     		orrs	r3, r3, r2
 565 01f2 7B62     		str	r3, [r7, #36]
 234:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     break;
 566              		.loc 1 234 0
 567 01f4 11E0     		b	.L50
 568              	.L49:
 235:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 236:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   case 4:             /* a.b.c.d -- 8.8.8.8 bits */
 237:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (val > 0xff) {
 569              		.loc 1 237 0
 570 01f6 7B6A     		ldr	r3, [r7, #36]
 571 01f8 FF2B     		cmp	r3, #255
 572 01fa 01D9     		bls	.L53
 238:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       return (0);
 573              		.loc 1 238 0
 574 01fc 0023     		movs	r3, #0
 575 01fe 16E0     		b	.L55
 576              	.L53:
 239:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 240:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     val |= (parts[0] << 24) | (parts[1] << 16) | (parts[2] << 8);
 577              		.loc 1 240 0
 578 0200 FB68     		ldr	r3, [r7, #12]
 579 0202 1A06     		lsls	r2, r3, #24
 580 0204 3B69     		ldr	r3, [r7, #16]
 581 0206 1B04     		lsls	r3, r3, #16
 582 0208 1A43     		orrs	r2, r2, r3
 583 020a 7B69     		ldr	r3, [r7, #20]
 584 020c 1B02     		lsls	r3, r3, #8
 585 020e 1343     		orrs	r3, r3, r2
 586 0210 7A6A     		ldr	r2, [r7, #36]
 587 0212 1343     		orrs	r3, r3, r2
 588 0214 7B62     		str	r3, [r7, #36]
 241:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     break;
 589              		.loc 1 241 0
 590 0216 00E0     		b	.L50
 591              	.L58:
 242:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   default:
 243:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     LWIP_ASSERT("unhandled", 0);
 244:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     break;
 592              		.loc 1 244 0
 593 0218 00BF     		nop
 594              	.L50:
 245:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 246:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   if (addr) {
 595              		.loc 1 246 0
 596 021a 3B68     		ldr	r3, [r7]
 597 021c 002B     		cmp	r3, #0
 598 021e 05D0     		beq	.L54
 247:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     ip4_addr_set_u32(addr, htonl(val));
 599              		.loc 1 247 0
 600 0220 786A     		ldr	r0, [r7, #36]
 601 0222 FFF7FEFF 		bl	lwip_htonl
 602 0226 0246     		mov	r2, r0
 603 0228 3B68     		ldr	r3, [r7]
 604 022a 1A60     		str	r2, [r3]
 605              	.L54:
 248:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 249:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   return (1);
 606              		.loc 1 249 0
 607 022c 0123     		movs	r3, #1
 608              	.L55:
 250:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** }
 609              		.loc 1 250 0 discriminator 1
 610 022e 1846     		mov	r0, r3
 611 0230 2837     		adds	r7, r7, #40
 612              		.cfi_def_cfa_offset 8
 613 0232 BD46     		mov	sp, r7
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 0234 80BD     		pop	{r7, pc}
 617              		.cfi_endproc
 618              	.LFE3:
 620 0236 00BF     		.section	.text.ipaddr_ntoa,"ax",%progbits
 621              		.align	2
 622              		.global	ipaddr_ntoa
 623              		.thumb
 624              		.thumb_func
 626              	ipaddr_ntoa:
 627              	.LFB4:
 251:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 252:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /**
 253:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Convert numeric IP address into decimal dotted ASCII representation.
 254:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * returns ptr to static buffer; not reentrant!
 255:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
 256:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param addr ip address in network order to convert
 257:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @return pointer to a global static (!) buffer that holds the ASCII
 258:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *         represenation of addr
 259:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
 260:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** char *
 261:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** ipaddr_ntoa(const ip_addr_t *addr)
 262:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** {
 628              		.loc 1 262 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 8
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 82B0     		sub	sp, sp, #8
 637              		.cfi_def_cfa_offset 16
 638 0004 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 640 0006 7860     		str	r0, [r7, #4]
 263:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   static char str[16];
 264:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   return ipaddr_ntoa_r(addr, str, 16);
 641              		.loc 1 264 0
 642 0008 7868     		ldr	r0, [r7, #4]
 643 000a 0449     		ldr	r1, .L61
 644 000c 1022     		movs	r2, #16
 645 000e FFF7FEFF 		bl	ipaddr_ntoa_r
 646 0012 0346     		mov	r3, r0
 265:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** }
 647              		.loc 1 265 0
 648 0014 1846     		mov	r0, r3
 649 0016 0837     		adds	r7, r7, #8
 650              		.cfi_def_cfa_offset 8
 651 0018 BD46     		mov	sp, r7
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 001a 80BD     		pop	{r7, pc}
 655              	.L62:
 656              		.align	2
 657              	.L61:
 658 001c 00000000 		.word	str.5184
 659              		.cfi_endproc
 660              	.LFE4:
 662              		.section	.text.ipaddr_ntoa_r,"ax",%progbits
 663              		.align	2
 664              		.global	ipaddr_ntoa_r
 665              		.thumb
 666              		.thumb_func
 668              	ipaddr_ntoa_r:
 669              	.LFB5:
 266:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 267:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** /**
 268:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * Same as ipaddr_ntoa, but reentrant since a user-supplied buffer is used.
 269:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *
 270:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param addr ip address in network order to convert
 271:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param buf target buffer where the string is stored
 272:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @param buflen length of buf
 273:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  * @return either pointer to buf which now holds the ASCII
 274:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  *         representation of addr or NULL if buf was too small
 275:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****  */
 276:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** char *ipaddr_ntoa_r(const ip_addr_t *addr, char *buf, int buflen)
 277:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** {
 670              		.loc 1 277 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 48
 673              		@ frame_needed = 1, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675 0000 80B4     		push	{r7}
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 7, -4
 678 0002 8DB0     		sub	sp, sp, #52
 679              		.cfi_def_cfa_offset 56
 680 0004 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 682 0006 F860     		str	r0, [r7, #12]
 683 0008 B960     		str	r1, [r7, #8]
 684 000a 7A60     		str	r2, [r7, #4]
 278:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u32_t s_addr;
 279:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   char inv[3];
 280:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   char *rp;
 281:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u8_t *ap;
 282:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u8_t rem;
 283:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u8_t n;
 284:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   u8_t i;
 285:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   int len = 0;
 685              		.loc 1 285 0
 686 000c 0023     		movs	r3, #0
 687 000e 3B62     		str	r3, [r7, #32]
 286:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 287:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   s_addr = ip4_addr_get_u32(addr);
 688              		.loc 1 287 0
 689 0010 FB68     		ldr	r3, [r7, #12]
 690 0012 1B68     		ldr	r3, [r3]
 691 0014 BB61     		str	r3, [r7, #24]
 288:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** 
 289:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   rp = buf;
 692              		.loc 1 289 0
 693 0016 BB68     		ldr	r3, [r7, #8]
 694 0018 FB62     		str	r3, [r7, #44]
 290:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   ap = (u8_t *)&s_addr;
 695              		.loc 1 290 0
 696 001a 07F11803 		add	r3, r7, #24
 697 001e BB62     		str	r3, [r7, #40]
 291:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   for(n = 0; n < 4; n++) {
 698              		.loc 1 291 0
 699 0020 0023     		movs	r3, #0
 700 0022 87F82730 		strb	r3, [r7, #39]
 701 0026 59E0     		b	.L64
 702              	.L71:
 292:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     i = 0;
 703              		.loc 1 292 0
 704 0028 0023     		movs	r3, #0
 705 002a 87F82630 		strb	r3, [r7, #38]
 706              	.L65:
 293:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     do {
 294:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       rem = *ap % (u8_t)10;
 707              		.loc 1 294 0 discriminator 1
 708 002e BB6A     		ldr	r3, [r7, #40]
 709 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 710 0032 334B     		ldr	r3, .L73
 711 0034 A3FB0213 		umull	r1, r3, r3, r2
 712 0038 D908     		lsrs	r1, r3, #3
 713 003a 0B46     		mov	r3, r1
 714 003c 9B00     		lsls	r3, r3, #2
 715 003e 0B44     		add	r3, r3, r1
 716 0040 5B00     		lsls	r3, r3, #1
 717 0042 D31A     		subs	r3, r2, r3
 718 0044 FB77     		strb	r3, [r7, #31]
 295:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       *ap /= (u8_t)10;
 719              		.loc 1 295 0 discriminator 1
 720 0046 BB6A     		ldr	r3, [r7, #40]
 721 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 722 004a 2D4A     		ldr	r2, .L73
 723 004c A2FB0323 		umull	r2, r3, r2, r3
 724 0050 DB08     		lsrs	r3, r3, #3
 725 0052 DAB2     		uxtb	r2, r3
 726 0054 BB6A     		ldr	r3, [r7, #40]
 727 0056 1A70     		strb	r2, [r3]
 296:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       inv[i++] = '0' + rem;
 728              		.loc 1 296 0 discriminator 1
 729 0058 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 730 005c 5A1C     		adds	r2, r3, #1
 731 005e 87F82620 		strb	r2, [r7, #38]
 732 0062 1946     		mov	r1, r3
 733 0064 FB7F     		ldrb	r3, [r7, #31]
 734 0066 3033     		adds	r3, r3, #48
 735 0068 DAB2     		uxtb	r2, r3
 736 006a 07F13003 		add	r3, r7, #48
 737 006e 0B44     		add	r3, r3, r1
 738 0070 03F81C2C 		strb	r2, [r3, #-28]
 297:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     } while(*ap);
 739              		.loc 1 297 0 discriminator 1
 740 0074 BB6A     		ldr	r3, [r7, #40]
 741 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 742 0078 002B     		cmp	r3, #0
 743 007a D8D1     		bne	.L65
 298:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     while(i--) {
 744              		.loc 1 298 0
 745 007c 12E0     		b	.L66
 746              	.L69:
 299:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       if (len++ >= buflen) {
 747              		.loc 1 299 0
 748 007e 3B6A     		ldr	r3, [r7, #32]
 749 0080 5A1C     		adds	r2, r3, #1
 750 0082 3A62     		str	r2, [r7, #32]
 751 0084 7A68     		ldr	r2, [r7, #4]
 752 0086 9342     		cmp	r3, r2
 753 0088 01DB     		blt	.L67
 300:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****         return NULL;
 754              		.loc 1 300 0
 755 008a 0023     		movs	r3, #0
 756 008c 31E0     		b	.L72
 757              	.L67:
 301:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       }
 302:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       *rp++ = inv[i];
 758              		.loc 1 302 0
 759 008e FB6A     		ldr	r3, [r7, #44]
 760 0090 5A1C     		adds	r2, r3, #1
 761 0092 FA62     		str	r2, [r7, #44]
 762 0094 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 763 0098 07F13001 		add	r1, r7, #48
 764 009c 0A44     		add	r2, r2, r1
 765 009e 12F81C2C 		ldrb	r2, [r2, #-28]	@ zero_extendqisi2
 766 00a2 1A70     		strb	r2, [r3]
 767              	.L66:
 298:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       if (len++ >= buflen) {
 768              		.loc 1 298 0
 769 00a4 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 770 00a8 5A1E     		subs	r2, r3, #1
 771 00aa 87F82620 		strb	r2, [r7, #38]
 772 00ae 002B     		cmp	r3, #0
 773 00b0 E5D1     		bne	.L69
 303:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 304:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     if (len++ >= buflen) {
 774              		.loc 1 304 0
 775 00b2 3B6A     		ldr	r3, [r7, #32]
 776 00b4 5A1C     		adds	r2, r3, #1
 777 00b6 3A62     		str	r2, [r7, #32]
 778 00b8 7A68     		ldr	r2, [r7, #4]
 779 00ba 9342     		cmp	r3, r2
 780 00bc 01DB     		blt	.L70
 305:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****       return NULL;
 781              		.loc 1 305 0
 782 00be 0023     		movs	r3, #0
 783 00c0 17E0     		b	.L72
 784              	.L70:
 306:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     }
 307:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     *rp++ = '.';
 785              		.loc 1 307 0 discriminator 2
 786 00c2 FB6A     		ldr	r3, [r7, #44]
 787 00c4 5A1C     		adds	r2, r3, #1
 788 00c6 FA62     		str	r2, [r7, #44]
 789 00c8 2E22     		movs	r2, #46
 790 00ca 1A70     		strb	r2, [r3]
 308:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     ap++;
 791              		.loc 1 308 0 discriminator 2
 792 00cc BB6A     		ldr	r3, [r7, #40]
 793 00ce 0133     		adds	r3, r3, #1
 794 00d0 BB62     		str	r3, [r7, #40]
 291:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     i = 0;
 795              		.loc 1 291 0 discriminator 2
 796 00d2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 797 00d6 0133     		adds	r3, r3, #1
 798 00d8 87F82730 		strb	r3, [r7, #39]
 799              	.L64:
 291:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****     i = 0;
 800              		.loc 1 291 0 is_stmt 0 discriminator 1
 801 00dc 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 802 00e0 032B     		cmp	r3, #3
 803 00e2 A1D9     		bls	.L71
 309:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   }
 310:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   *--rp = 0;
 804              		.loc 1 310 0 is_stmt 1
 805 00e4 FB6A     		ldr	r3, [r7, #44]
 806 00e6 013B     		subs	r3, r3, #1
 807 00e8 FB62     		str	r3, [r7, #44]
 808 00ea FB6A     		ldr	r3, [r7, #44]
 809 00ec 0022     		movs	r2, #0
 810 00ee 1A70     		strb	r2, [r3]
 311:../lwip-1.4.1/src/core/ipv4/ip_addr.c ****   return buf;
 811              		.loc 1 311 0
 812 00f0 BB68     		ldr	r3, [r7, #8]
 813              	.L72:
 312:../lwip-1.4.1/src/core/ipv4/ip_addr.c **** }
 814              		.loc 1 312 0 discriminator 1
 815 00f2 1846     		mov	r0, r3
 816 00f4 3437     		adds	r7, r7, #52
 817              		.cfi_def_cfa_offset 4
 818 00f6 BD46     		mov	sp, r7
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 00f8 5DF8047B 		ldr	r7, [sp], #4
 822              		.cfi_restore 7
 823              		.cfi_def_cfa_offset 0
 824 00fc 7047     		bx	lr
 825              	.L74:
 826 00fe 00BF     		.align	2
 827              	.L73:
 828 0100 CDCCCCCC 		.word	-858993459
 829              		.cfi_endproc
 830              	.LFE5:
 832              		.bss
 833              		.align	2
 834              	str.5184:
 835 0000 00000000 		.space	16
 835      00000000 
 835      00000000 
 835      00000000 
 836              		.text
 837              	.Letext0:
 838              		.file 2 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\port/arch/cc.h"
 839              		.file 3 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include\\ipv4/lwip/
 840              		.file 4 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/err.h"
 841              		.file 5 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/pbuf.h
 842              		.file 6 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/netif.
DEFINED SYMBOLS
                            *ABS*:00000000 ip_addr.c
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:23     .rodata:00000000 ip_addr_any
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:20     .rodata:00000000 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:29     .rodata:00000004 ip_addr_broadcast
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:32     .text.ip4_addr_isbroadcast:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:37     .text.ip4_addr_isbroadcast:00000000 ip4_addr_isbroadcast
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:135    .text.ip4_addr_netmask_valid:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:140    .text.ip4_addr_netmask_valid:00000000 ip4_addr_netmask_valid
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:220    .text.ipaddr_addr:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:225    .text.ipaddr_addr:00000000 ipaddr_addr
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:272    .text.ipaddr_aton:00000000 ipaddr_aton
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:267    .text.ipaddr_aton:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:521    .text.ipaddr_aton:000001a8 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:526    .text.ipaddr_aton:000001bc $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:621    .text.ipaddr_ntoa:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:626    .text.ipaddr_ntoa:00000000 ipaddr_ntoa
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:668    .text.ipaddr_ntoa_r:00000000 ipaddr_ntoa_r
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:658    .text.ipaddr_ntoa:0000001c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:834    .bss:00000000 str.5184
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:663    .text.ipaddr_ntoa_r:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:828    .text.ipaddr_ntoa_r:00000100 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccldCTAm.s:833    .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.2d80f1b5ce3c69d13e258577ddf29668
                           .group:00000000 wm4.lwipopts.h.25.76e03deb318fbe54d896a83c1b611e55
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.0ec64ad8cd52614da6479c7936fa3efa
                           .group:00000000 wm4.cc.h.49.217a0c46a6dd8448cb36cccbf00f897f
                           .group:00000000 wm4.arch.h.52.2e97dbd839a1aa815d8c47878a7f8e2b
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.stddef.h.39.7e3d906ac58942e0b374c527445f5de5
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.types.h.24.b2be5f53932a9c9d07787288b29b6d75
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.82.82b71f3f44c70e3a459d0f66642b05eb
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.68.ff6d7571d3ad75c55f15e26dbaa81e35
                           .group:00000000 wm4.debug.h.45.223028a5c052c9f879ffd43dd519f3f1
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.opt.h.76.0e16bb9c23144e1f631b5b5afa9a69f6
                           .group:00000000 wm4.def.h.33.d4208c3cd3e0fc64e20a8b9f95a681f3
                           .group:00000000 wm4.ip_addr.h.92.064dfb1f61acc5ba1dffbdba3104a668
                           .group:00000000 wm4.netif.h.33.e68fa2fc48174dad7292f51867e80534
                           .group:00000000 wm4.err.h.33.909ff4b35439192d64931f0a04fc8fdb
                           .group:00000000 wm4.pbuf.h.34.bb639510af5bfdff8eae9cce62bf5909
                           .group:00000000 wm4.netif.h.61.25a4ec33204158dc7a027270d7b19690

UNDEFINED SYMBOLS
lwip_htonl
