   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"netif.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	netif_list,4,4
  19              		.comm	netif_default,4,4
  20              		.bss
  21              	netif_num:
  22 0000 00       		.space	1
  23              		.section	.text.netif_init,"ax",%progbits
  24              		.align	2
  25              		.global	netif_init
  26              		.thumb
  27              		.thumb_func
  29              	netif_init:
  30              	.LFB0:
  31              		.file 1 "../lwip-1.4.1/src/core/netif.c"
   1:../lwip-1.4.1/src/core/netif.c **** /**
   2:../lwip-1.4.1/src/core/netif.c ****  * @file
   3:../lwip-1.4.1/src/core/netif.c ****  * lwIP network interface abstraction
   4:../lwip-1.4.1/src/core/netif.c ****  *
   5:../lwip-1.4.1/src/core/netif.c ****  */
   6:../lwip-1.4.1/src/core/netif.c **** 
   7:../lwip-1.4.1/src/core/netif.c **** /*
   8:../lwip-1.4.1/src/core/netif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:../lwip-1.4.1/src/core/netif.c ****  * All rights reserved.
  10:../lwip-1.4.1/src/core/netif.c ****  *
  11:../lwip-1.4.1/src/core/netif.c ****  * Redistribution and use in source and binary forms, with or without modification,
  12:../lwip-1.4.1/src/core/netif.c ****  * are permitted provided that the following conditions are met:
  13:../lwip-1.4.1/src/core/netif.c ****  *
  14:../lwip-1.4.1/src/core/netif.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  15:../lwip-1.4.1/src/core/netif.c ****  *    this list of conditions and the following disclaimer.
  16:../lwip-1.4.1/src/core/netif.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../lwip-1.4.1/src/core/netif.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../lwip-1.4.1/src/core/netif.c ****  *    and/or other materials provided with the distribution.
  19:../lwip-1.4.1/src/core/netif.c ****  * 3. The name of the author may not be used to endorse or promote products
  20:../lwip-1.4.1/src/core/netif.c ****  *    derived from this software without specific prior written permission.
  21:../lwip-1.4.1/src/core/netif.c ****  *
  22:../lwip-1.4.1/src/core/netif.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  23:../lwip-1.4.1/src/core/netif.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  24:../lwip-1.4.1/src/core/netif.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  25:../lwip-1.4.1/src/core/netif.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  26:../lwip-1.4.1/src/core/netif.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  27:../lwip-1.4.1/src/core/netif.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../lwip-1.4.1/src/core/netif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../lwip-1.4.1/src/core/netif.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  30:../lwip-1.4.1/src/core/netif.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  31:../lwip-1.4.1/src/core/netif.c ****  * OF SUCH DAMAGE.
  32:../lwip-1.4.1/src/core/netif.c ****  *
  33:../lwip-1.4.1/src/core/netif.c ****  * This file is part of the lwIP TCP/IP stack.
  34:../lwip-1.4.1/src/core/netif.c ****  *
  35:../lwip-1.4.1/src/core/netif.c ****  * Author: Adam Dunkels <adam@sics.se>
  36:../lwip-1.4.1/src/core/netif.c ****  *
  37:../lwip-1.4.1/src/core/netif.c ****  */
  38:../lwip-1.4.1/src/core/netif.c **** 
  39:../lwip-1.4.1/src/core/netif.c **** #include "lwip/opt.h"
  40:../lwip-1.4.1/src/core/netif.c **** 
  41:../lwip-1.4.1/src/core/netif.c **** #include "lwip/def.h"
  42:../lwip-1.4.1/src/core/netif.c **** #include "lwip/ip_addr.h"
  43:../lwip-1.4.1/src/core/netif.c **** #include "lwip/netif.h"
  44:../lwip-1.4.1/src/core/netif.c **** #include "lwip/tcp_impl.h"
  45:../lwip-1.4.1/src/core/netif.c **** #include "lwip/snmp.h"
  46:../lwip-1.4.1/src/core/netif.c **** #include "lwip/igmp.h"
  47:../lwip-1.4.1/src/core/netif.c **** #include "netif/etharp.h"
  48:../lwip-1.4.1/src/core/netif.c **** #include "lwip/stats.h"
  49:../lwip-1.4.1/src/core/netif.c **** #if ENABLE_LOOPBACK
  50:../lwip-1.4.1/src/core/netif.c **** #include "lwip/sys.h"
  51:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_LOOPBACK_MULTITHREADING
  52:../lwip-1.4.1/src/core/netif.c **** #include "lwip/tcpip.h"
  53:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_LOOPBACK_MULTITHREADING */
  54:../lwip-1.4.1/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
  55:../lwip-1.4.1/src/core/netif.c **** 
  56:../lwip-1.4.1/src/core/netif.c **** #if LWIP_AUTOIP
  57:../lwip-1.4.1/src/core/netif.c **** #include "lwip/autoip.h"
  58:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_AUTOIP */
  59:../lwip-1.4.1/src/core/netif.c **** #if LWIP_DHCP
  60:../lwip-1.4.1/src/core/netif.c **** #include "lwip/dhcp.h"
  61:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_DHCP */
  62:../lwip-1.4.1/src/core/netif.c **** 
  63:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
  64:../lwip-1.4.1/src/core/netif.c **** #define NETIF_STATUS_CALLBACK(n) do{ if (n->status_callback) { (n->status_callback)(n); }}while(0)
  65:../lwip-1.4.1/src/core/netif.c **** #else
  66:../lwip-1.4.1/src/core/netif.c **** #define NETIF_STATUS_CALLBACK(n)
  67:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */ 
  68:../lwip-1.4.1/src/core/netif.c **** 
  69:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
  70:../lwip-1.4.1/src/core/netif.c **** #define NETIF_LINK_CALLBACK(n) do{ if (n->link_callback) { (n->link_callback)(n); }}while(0)
  71:../lwip-1.4.1/src/core/netif.c **** #else
  72:../lwip-1.4.1/src/core/netif.c **** #define NETIF_LINK_CALLBACK(n)
  73:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */ 
  74:../lwip-1.4.1/src/core/netif.c **** 
  75:../lwip-1.4.1/src/core/netif.c **** struct netif *netif_list;
  76:../lwip-1.4.1/src/core/netif.c **** struct netif *netif_default;
  77:../lwip-1.4.1/src/core/netif.c **** 
  78:../lwip-1.4.1/src/core/netif.c **** static u8_t netif_num;
  79:../lwip-1.4.1/src/core/netif.c **** 
  80:../lwip-1.4.1/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
  81:../lwip-1.4.1/src/core/netif.c **** static struct netif loop_netif;
  82:../lwip-1.4.1/src/core/netif.c **** 
  83:../lwip-1.4.1/src/core/netif.c **** /**
  84:../lwip-1.4.1/src/core/netif.c ****  * Initialize a lwip network interface structure for a loopback interface
  85:../lwip-1.4.1/src/core/netif.c ****  *
  86:../lwip-1.4.1/src/core/netif.c ****  * @param netif the lwip network interface structure for this loopif
  87:../lwip-1.4.1/src/core/netif.c ****  * @return ERR_OK if the loopif is initialized
  88:../lwip-1.4.1/src/core/netif.c ****  *         ERR_MEM if private data couldn't be allocated
  89:../lwip-1.4.1/src/core/netif.c ****  */
  90:../lwip-1.4.1/src/core/netif.c **** static err_t
  91:../lwip-1.4.1/src/core/netif.c **** netif_loopif_init(struct netif *netif)
  92:../lwip-1.4.1/src/core/netif.c **** {
  93:../lwip-1.4.1/src/core/netif.c ****   /* initialize the snmp variables and counters inside the struct netif
  94:../lwip-1.4.1/src/core/netif.c ****    * ifSpeed: no assumption can be made!
  95:../lwip-1.4.1/src/core/netif.c ****    */
  96:../lwip-1.4.1/src/core/netif.c ****   NETIF_INIT_SNMP(netif, snmp_ifType_softwareLoopback, 0);
  97:../lwip-1.4.1/src/core/netif.c **** 
  98:../lwip-1.4.1/src/core/netif.c ****   netif->name[0] = 'l';
  99:../lwip-1.4.1/src/core/netif.c ****   netif->name[1] = 'o';
 100:../lwip-1.4.1/src/core/netif.c ****   netif->output = netif_loop_output;
 101:../lwip-1.4.1/src/core/netif.c ****   return ERR_OK;
 102:../lwip-1.4.1/src/core/netif.c **** }
 103:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 104:../lwip-1.4.1/src/core/netif.c **** 
 105:../lwip-1.4.1/src/core/netif.c **** void
 106:../lwip-1.4.1/src/core/netif.c **** netif_init(void)
 107:../lwip-1.4.1/src/core/netif.c **** {
  32              		.loc 1 107 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              		.cfi_def_cfa_offset 4
  39              		.cfi_offset 7, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
 108:../lwip-1.4.1/src/core/netif.c **** #if LWIP_HAVE_LOOPIF
 109:../lwip-1.4.1/src/core/netif.c ****   ip_addr_t loop_ipaddr, loop_netmask, loop_gw;
 110:../lwip-1.4.1/src/core/netif.c ****   IP4_ADDR(&loop_gw, 127,0,0,1);
 111:../lwip-1.4.1/src/core/netif.c ****   IP4_ADDR(&loop_ipaddr, 127,0,0,1);
 112:../lwip-1.4.1/src/core/netif.c ****   IP4_ADDR(&loop_netmask, 255,0,0,0);
 113:../lwip-1.4.1/src/core/netif.c **** 
 114:../lwip-1.4.1/src/core/netif.c **** #if NO_SYS
 115:../lwip-1.4.1/src/core/netif.c ****   netif_add(&loop_netif, &loop_ipaddr, &loop_netmask, &loop_gw, NULL, netif_loopif_init, ip_input);
 116:../lwip-1.4.1/src/core/netif.c **** #else  /* NO_SYS */
 117:../lwip-1.4.1/src/core/netif.c ****   netif_add(&loop_netif, &loop_ipaddr, &loop_netmask, &loop_gw, NULL, netif_loopif_init, tcpip_inpu
 118:../lwip-1.4.1/src/core/netif.c **** #endif /* NO_SYS */
 119:../lwip-1.4.1/src/core/netif.c ****   netif_set_up(&loop_netif);
 120:../lwip-1.4.1/src/core/netif.c **** 
 121:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_HAVE_LOOPIF */
 122:../lwip-1.4.1/src/core/netif.c **** }
  42              		.loc 1 122 0
  43 0004 BD46     		mov	sp, r7
  44              		.cfi_def_cfa_register 13
  45              		@ sp needed
  46 0006 5DF8047B 		ldr	r7, [sp], #4
  47              		.cfi_restore 7
  48              		.cfi_def_cfa_offset 0
  49 000a 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE0:
  53              		.section	.text.netif_add,"ax",%progbits
  54              		.align	2
  55              		.global	netif_add
  56              		.thumb
  57              		.thumb_func
  59              	netif_add:
  60              	.LFB1:
 123:../lwip-1.4.1/src/core/netif.c **** 
 124:../lwip-1.4.1/src/core/netif.c **** /**
 125:../lwip-1.4.1/src/core/netif.c ****  * Add a network interface to the list of lwIP netifs.
 126:../lwip-1.4.1/src/core/netif.c ****  *
 127:../lwip-1.4.1/src/core/netif.c ****  * @param netif a pre-allocated netif structure
 128:../lwip-1.4.1/src/core/netif.c ****  * @param ipaddr IP address for the new netif
 129:../lwip-1.4.1/src/core/netif.c ****  * @param netmask network mask for the new netif
 130:../lwip-1.4.1/src/core/netif.c ****  * @param gw default gateway IP address for the new netif
 131:../lwip-1.4.1/src/core/netif.c ****  * @param state opaque data passed to the new netif
 132:../lwip-1.4.1/src/core/netif.c ****  * @param init callback function that initializes the interface
 133:../lwip-1.4.1/src/core/netif.c ****  * @param input callback function that is called to pass
 134:../lwip-1.4.1/src/core/netif.c ****  * ingress packets up in the protocol layer stack.
 135:../lwip-1.4.1/src/core/netif.c ****  *
 136:../lwip-1.4.1/src/core/netif.c ****  * @return netif, or NULL if failed.
 137:../lwip-1.4.1/src/core/netif.c ****  */
 138:../lwip-1.4.1/src/core/netif.c **** struct netif *
 139:../lwip-1.4.1/src/core/netif.c **** netif_add(struct netif *netif, ip_addr_t *ipaddr, ip_addr_t *netmask,
 140:../lwip-1.4.1/src/core/netif.c ****   ip_addr_t *gw, void *state, netif_init_fn init, netif_input_fn input)
 141:../lwip-1.4.1/src/core/netif.c **** {
  61              		.loc 1 141 0
  62              		.cfi_startproc
  63              		@ args = 12, pretend = 0, frame = 16
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 84B0     		sub	sp, sp, #16
  70              		.cfi_def_cfa_offset 24
  71 0004 00AF     		add	r7, sp, #0
  72              		.cfi_def_cfa_register 7
  73 0006 F860     		str	r0, [r7, #12]
  74 0008 B960     		str	r1, [r7, #8]
  75 000a 7A60     		str	r2, [r7, #4]
  76 000c 3B60     		str	r3, [r7]
 142:../lwip-1.4.1/src/core/netif.c **** 
 143:../lwip-1.4.1/src/core/netif.c ****   LWIP_ASSERT("No init function given", init != NULL);
 144:../lwip-1.4.1/src/core/netif.c **** 
 145:../lwip-1.4.1/src/core/netif.c ****   /* reset new interface configuration state */
 146:../lwip-1.4.1/src/core/netif.c ****   ip_addr_set_zero(&netif->ip_addr);
  77              		.loc 1 146 0
  78 000e FB68     		ldr	r3, [r7, #12]
  79 0010 0022     		movs	r2, #0
  80 0012 5A60     		str	r2, [r3, #4]
 147:../lwip-1.4.1/src/core/netif.c ****   ip_addr_set_zero(&netif->netmask);
  81              		.loc 1 147 0
  82 0014 FB68     		ldr	r3, [r7, #12]
  83 0016 0022     		movs	r2, #0
  84 0018 9A60     		str	r2, [r3, #8]
 148:../lwip-1.4.1/src/core/netif.c ****   ip_addr_set_zero(&netif->gw);
  85              		.loc 1 148 0
  86 001a FB68     		ldr	r3, [r7, #12]
  87 001c 0022     		movs	r2, #0
  88 001e DA60     		str	r2, [r3, #12]
 149:../lwip-1.4.1/src/core/netif.c ****   netif->flags = 0;
  89              		.loc 1 149 0
  90 0020 FB68     		ldr	r3, [r7, #12]
  91 0022 0022     		movs	r2, #0
  92 0024 83F82920 		strb	r2, [r3, #41]
 150:../lwip-1.4.1/src/core/netif.c **** #if LWIP_DHCP
 151:../lwip-1.4.1/src/core/netif.c ****   /* netif not under DHCP control by default */
 152:../lwip-1.4.1/src/core/netif.c ****   netif->dhcp = NULL;
 153:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_DHCP */
 154:../lwip-1.4.1/src/core/netif.c **** #if LWIP_AUTOIP
 155:../lwip-1.4.1/src/core/netif.c ****   /* netif not under AutoIP control by default */
 156:../lwip-1.4.1/src/core/netif.c ****   netif->autoip = NULL;
 157:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_AUTOIP */
 158:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 159:../lwip-1.4.1/src/core/netif.c ****   netif->status_callback = NULL;
 160:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 161:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_LINK_CALLBACK
 162:../lwip-1.4.1/src/core/netif.c ****   netif->link_callback = NULL;
 163:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_LINK_CALLBACK */
 164:../lwip-1.4.1/src/core/netif.c **** #if LWIP_IGMP
 165:../lwip-1.4.1/src/core/netif.c ****   netif->igmp_mac_filter = NULL;
 166:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_IGMP */
 167:../lwip-1.4.1/src/core/netif.c **** #if ENABLE_LOOPBACK
 168:../lwip-1.4.1/src/core/netif.c ****   netif->loop_first = NULL;
 169:../lwip-1.4.1/src/core/netif.c ****   netif->loop_last = NULL;
 170:../lwip-1.4.1/src/core/netif.c **** #endif /* ENABLE_LOOPBACK */
 171:../lwip-1.4.1/src/core/netif.c **** 
 172:../lwip-1.4.1/src/core/netif.c ****   /* remember netif specific state information data */
 173:../lwip-1.4.1/src/core/netif.c ****   netif->state = state;
  93              		.loc 1 173 0
  94 0028 FB68     		ldr	r3, [r7, #12]
  95 002a BA69     		ldr	r2, [r7, #24]
  96 002c DA61     		str	r2, [r3, #28]
 174:../lwip-1.4.1/src/core/netif.c ****   netif->num = netif_num++;
  97              		.loc 1 174 0
  98 002e 134B     		ldr	r3, .L5
  99 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 100 0032 5A1C     		adds	r2, r3, #1
 101 0034 D1B2     		uxtb	r1, r2
 102 0036 114A     		ldr	r2, .L5
 103 0038 1170     		strb	r1, [r2]
 104 003a FA68     		ldr	r2, [r7, #12]
 105 003c 82F82C30 		strb	r3, [r2, #44]
 175:../lwip-1.4.1/src/core/netif.c ****   netif->input = input;
 106              		.loc 1 175 0
 107 0040 FB68     		ldr	r3, [r7, #12]
 108 0042 3A6A     		ldr	r2, [r7, #32]
 109 0044 1A61     		str	r2, [r3, #16]
 176:../lwip-1.4.1/src/core/netif.c ****   NETIF_SET_HWADDRHINT(netif, NULL);
 177:../lwip-1.4.1/src/core/netif.c **** #if ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS
 178:../lwip-1.4.1/src/core/netif.c ****   netif->loop_cnt_current = 0;
 179:../lwip-1.4.1/src/core/netif.c **** #endif /* ENABLE_LOOPBACK && LWIP_LOOPBACK_MAX_PBUFS */
 180:../lwip-1.4.1/src/core/netif.c **** 
 181:../lwip-1.4.1/src/core/netif.c ****   netif_set_addr(netif, ipaddr, netmask, gw);
 110              		.loc 1 181 0
 111 0046 F868     		ldr	r0, [r7, #12]
 112 0048 B968     		ldr	r1, [r7, #8]
 113 004a 7A68     		ldr	r2, [r7, #4]
 114 004c 3B68     		ldr	r3, [r7]
 115 004e FFF7FEFF 		bl	netif_set_addr
 182:../lwip-1.4.1/src/core/netif.c **** 
 183:../lwip-1.4.1/src/core/netif.c ****   /* call user specified initialization function for netif */
 184:../lwip-1.4.1/src/core/netif.c ****   if (init(netif) != ERR_OK) {
 116              		.loc 1 184 0
 117 0052 FB69     		ldr	r3, [r7, #28]
 118 0054 F868     		ldr	r0, [r7, #12]
 119 0056 9847     		blx	r3
 120 0058 0346     		mov	r3, r0
 121 005a 002B     		cmp	r3, #0
 122 005c 01D0     		beq	.L3
 185:../lwip-1.4.1/src/core/netif.c ****     return NULL;
 123              		.loc 1 185 0
 124 005e 0023     		movs	r3, #0
 125 0060 07E0     		b	.L4
 126              	.L3:
 186:../lwip-1.4.1/src/core/netif.c ****   }
 187:../lwip-1.4.1/src/core/netif.c **** 
 188:../lwip-1.4.1/src/core/netif.c ****   /* add this netif to the list */
 189:../lwip-1.4.1/src/core/netif.c ****   netif->next = netif_list;
 127              		.loc 1 189 0
 128 0062 074B     		ldr	r3, .L5+4
 129 0064 1A68     		ldr	r2, [r3]
 130 0066 FB68     		ldr	r3, [r7, #12]
 131 0068 1A60     		str	r2, [r3]
 190:../lwip-1.4.1/src/core/netif.c ****   netif_list = netif;
 132              		.loc 1 190 0
 133 006a 054A     		ldr	r2, .L5+4
 134 006c FB68     		ldr	r3, [r7, #12]
 135 006e 1360     		str	r3, [r2]
 191:../lwip-1.4.1/src/core/netif.c ****   snmp_inc_iflist();
 192:../lwip-1.4.1/src/core/netif.c **** 
 193:../lwip-1.4.1/src/core/netif.c **** #if LWIP_IGMP
 194:../lwip-1.4.1/src/core/netif.c ****   /* start IGMP processing */
 195:../lwip-1.4.1/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 196:../lwip-1.4.1/src/core/netif.c ****     igmp_start(netif);
 197:../lwip-1.4.1/src/core/netif.c ****   }
 198:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_IGMP */
 199:../lwip-1.4.1/src/core/netif.c **** 
 200:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: added interface %c%c IP addr ",
 201:../lwip-1.4.1/src/core/netif.c ****     netif->name[0], netif->name[1]));
 202:../lwip-1.4.1/src/core/netif.c ****   ip_addr_debug_print(NETIF_DEBUG, ipaddr);
 203:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" netmask "));
 204:../lwip-1.4.1/src/core/netif.c ****   ip_addr_debug_print(NETIF_DEBUG, netmask);
 205:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, (" gw "));
 206:../lwip-1.4.1/src/core/netif.c ****   ip_addr_debug_print(NETIF_DEBUG, gw);
 207:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("\n"));
 208:../lwip-1.4.1/src/core/netif.c ****   return netif;
 136              		.loc 1 208 0
 137 0070 FB68     		ldr	r3, [r7, #12]
 138              	.L4:
 209:../lwip-1.4.1/src/core/netif.c **** }
 139              		.loc 1 209 0
 140 0072 1846     		mov	r0, r3
 141 0074 1037     		adds	r7, r7, #16
 142              		.cfi_def_cfa_offset 8
 143 0076 BD46     		mov	sp, r7
 144              		.cfi_def_cfa_register 13
 145              		@ sp needed
 146 0078 80BD     		pop	{r7, pc}
 147              	.L6:
 148 007a 00BF     		.align	2
 149              	.L5:
 150 007c 00000000 		.word	netif_num
 151 0080 00000000 		.word	netif_list
 152              		.cfi_endproc
 153              	.LFE1:
 155              		.section	.text.netif_set_addr,"ax",%progbits
 156              		.align	2
 157              		.global	netif_set_addr
 158              		.thumb
 159              		.thumb_func
 161              	netif_set_addr:
 162              	.LFB2:
 210:../lwip-1.4.1/src/core/netif.c **** 
 211:../lwip-1.4.1/src/core/netif.c **** /**
 212:../lwip-1.4.1/src/core/netif.c ****  * Change IP address configuration for a network interface (including netmask
 213:../lwip-1.4.1/src/core/netif.c ****  * and default gateway).
 214:../lwip-1.4.1/src/core/netif.c ****  *
 215:../lwip-1.4.1/src/core/netif.c ****  * @param netif the network interface to change
 216:../lwip-1.4.1/src/core/netif.c ****  * @param ipaddr the new IP address
 217:../lwip-1.4.1/src/core/netif.c ****  * @param netmask the new netmask
 218:../lwip-1.4.1/src/core/netif.c ****  * @param gw the new default gateway
 219:../lwip-1.4.1/src/core/netif.c ****  */
 220:../lwip-1.4.1/src/core/netif.c **** void
 221:../lwip-1.4.1/src/core/netif.c **** netif_set_addr(struct netif *netif, ip_addr_t *ipaddr, ip_addr_t *netmask,
 222:../lwip-1.4.1/src/core/netif.c ****     ip_addr_t *gw)
 223:../lwip-1.4.1/src/core/netif.c **** {
 163              		.loc 1 223 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 84B0     		sub	sp, sp, #16
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 175 0006 F860     		str	r0, [r7, #12]
 176 0008 B960     		str	r1, [r7, #8]
 177 000a 7A60     		str	r2, [r7, #4]
 178 000c 3B60     		str	r3, [r7]
 224:../lwip-1.4.1/src/core/netif.c ****   netif_set_ipaddr(netif, ipaddr);
 179              		.loc 1 224 0
 180 000e F868     		ldr	r0, [r7, #12]
 181 0010 B968     		ldr	r1, [r7, #8]
 182 0012 FFF7FEFF 		bl	netif_set_ipaddr
 225:../lwip-1.4.1/src/core/netif.c ****   netif_set_netmask(netif, netmask);
 183              		.loc 1 225 0
 184 0016 F868     		ldr	r0, [r7, #12]
 185 0018 7968     		ldr	r1, [r7, #4]
 186 001a FFF7FEFF 		bl	netif_set_netmask
 226:../lwip-1.4.1/src/core/netif.c ****   netif_set_gw(netif, gw);
 187              		.loc 1 226 0
 188 001e F868     		ldr	r0, [r7, #12]
 189 0020 3968     		ldr	r1, [r7]
 190 0022 FFF7FEFF 		bl	netif_set_gw
 227:../lwip-1.4.1/src/core/netif.c **** }
 191              		.loc 1 227 0
 192 0026 1037     		adds	r7, r7, #16
 193              		.cfi_def_cfa_offset 8
 194 0028 BD46     		mov	sp, r7
 195              		.cfi_def_cfa_register 13
 196              		@ sp needed
 197 002a 80BD     		pop	{r7, pc}
 198              		.cfi_endproc
 199              	.LFE2:
 201              		.section	.text.netif_remove,"ax",%progbits
 202              		.align	2
 203              		.global	netif_remove
 204              		.thumb
 205              		.thumb_func
 207              	netif_remove:
 208              	.LFB3:
 228:../lwip-1.4.1/src/core/netif.c **** 
 229:../lwip-1.4.1/src/core/netif.c **** /**
 230:../lwip-1.4.1/src/core/netif.c ****  * Remove a network interface from the list of lwIP netifs.
 231:../lwip-1.4.1/src/core/netif.c ****  *
 232:../lwip-1.4.1/src/core/netif.c ****  * @param netif the network interface to remove
 233:../lwip-1.4.1/src/core/netif.c ****  */
 234:../lwip-1.4.1/src/core/netif.c **** void
 235:../lwip-1.4.1/src/core/netif.c **** netif_remove(struct netif *netif)
 236:../lwip-1.4.1/src/core/netif.c **** {
 209              		.loc 1 236 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 16
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 0002 84B0     		sub	sp, sp, #16
 218              		.cfi_def_cfa_offset 24
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 221 0006 7860     		str	r0, [r7, #4]
 237:../lwip-1.4.1/src/core/netif.c ****   if (netif == NULL) {
 222              		.loc 1 237 0
 223 0008 7B68     		ldr	r3, [r7, #4]
 224 000a 002B     		cmp	r3, #0
 225 000c 00D1     		bne	.L9
 238:../lwip-1.4.1/src/core/netif.c ****     return;
 226              		.loc 1 238 0
 227 000e 33E0     		b	.L8
 228              	.L9:
 239:../lwip-1.4.1/src/core/netif.c ****   }
 240:../lwip-1.4.1/src/core/netif.c **** 
 241:../lwip-1.4.1/src/core/netif.c **** #if LWIP_IGMP
 242:../lwip-1.4.1/src/core/netif.c ****   /* stop IGMP processing */
 243:../lwip-1.4.1/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_IGMP) {
 244:../lwip-1.4.1/src/core/netif.c ****     igmp_stop(netif);
 245:../lwip-1.4.1/src/core/netif.c ****   }
 246:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_IGMP */
 247:../lwip-1.4.1/src/core/netif.c ****   if (netif_is_up(netif)) {
 229              		.loc 1 247 0
 230 0010 7B68     		ldr	r3, [r7, #4]
 231 0012 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 232 0016 03F00103 		and	r3, r3, #1
 233 001a 002B     		cmp	r3, #0
 234 001c 02D0     		beq	.L11
 248:../lwip-1.4.1/src/core/netif.c ****     /* set netif down before removing (call callback function) */
 249:../lwip-1.4.1/src/core/netif.c ****     netif_set_down(netif);
 235              		.loc 1 249 0
 236 001e 7868     		ldr	r0, [r7, #4]
 237 0020 FFF7FEFF 		bl	netif_set_down
 238              	.L11:
 250:../lwip-1.4.1/src/core/netif.c ****   }
 251:../lwip-1.4.1/src/core/netif.c **** 
 252:../lwip-1.4.1/src/core/netif.c ****   snmp_delete_ipaddridx_tree(netif);
 253:../lwip-1.4.1/src/core/netif.c **** 
 254:../lwip-1.4.1/src/core/netif.c ****   /*  is it the first netif? */
 255:../lwip-1.4.1/src/core/netif.c ****   if (netif_list == netif) {
 239              		.loc 1 255 0
 240 0024 164B     		ldr	r3, .L19
 241 0026 1A68     		ldr	r2, [r3]
 242 0028 7B68     		ldr	r3, [r7, #4]
 243 002a 9A42     		cmp	r2, r3
 244 002c 04D1     		bne	.L12
 256:../lwip-1.4.1/src/core/netif.c ****     netif_list = netif->next;
 245              		.loc 1 256 0
 246 002e 7B68     		ldr	r3, [r7, #4]
 247 0030 1B68     		ldr	r3, [r3]
 248 0032 134A     		ldr	r2, .L19
 249 0034 1360     		str	r3, [r2]
 250 0036 17E0     		b	.L13
 251              	.L12:
 252              	.LBB2:
 257:../lwip-1.4.1/src/core/netif.c ****   } else {
 258:../lwip-1.4.1/src/core/netif.c ****     /*  look for netif further down the list */
 259:../lwip-1.4.1/src/core/netif.c ****     struct netif * tmpNetif;
 260:../lwip-1.4.1/src/core/netif.c ****     for (tmpNetif = netif_list; tmpNetif != NULL; tmpNetif = tmpNetif->next) {
 253              		.loc 1 260 0
 254 0038 114B     		ldr	r3, .L19
 255 003a 1B68     		ldr	r3, [r3]
 256 003c FB60     		str	r3, [r7, #12]
 257 003e 0CE0     		b	.L14
 258              	.L17:
 261:../lwip-1.4.1/src/core/netif.c ****       if (tmpNetif->next == netif) {
 259              		.loc 1 261 0
 260 0040 FB68     		ldr	r3, [r7, #12]
 261 0042 1A68     		ldr	r2, [r3]
 262 0044 7B68     		ldr	r3, [r7, #4]
 263 0046 9A42     		cmp	r2, r3
 264 0048 04D1     		bne	.L15
 262:../lwip-1.4.1/src/core/netif.c ****         tmpNetif->next = netif->next;
 265              		.loc 1 262 0
 266 004a 7B68     		ldr	r3, [r7, #4]
 267 004c 1A68     		ldr	r2, [r3]
 268 004e FB68     		ldr	r3, [r7, #12]
 269 0050 1A60     		str	r2, [r3]
 263:../lwip-1.4.1/src/core/netif.c ****         break;
 270              		.loc 1 263 0
 271 0052 05E0     		b	.L16
 272              	.L15:
 260:../lwip-1.4.1/src/core/netif.c ****       if (tmpNetif->next == netif) {
 273              		.loc 1 260 0 discriminator 2
 274 0054 FB68     		ldr	r3, [r7, #12]
 275 0056 1B68     		ldr	r3, [r3]
 276 0058 FB60     		str	r3, [r7, #12]
 277              	.L14:
 260:../lwip-1.4.1/src/core/netif.c ****       if (tmpNetif->next == netif) {
 278              		.loc 1 260 0 is_stmt 0 discriminator 1
 279 005a FB68     		ldr	r3, [r7, #12]
 280 005c 002B     		cmp	r3, #0
 281 005e EFD1     		bne	.L17
 282              	.L16:
 264:../lwip-1.4.1/src/core/netif.c ****       }
 265:../lwip-1.4.1/src/core/netif.c ****     }
 266:../lwip-1.4.1/src/core/netif.c ****     if (tmpNetif == NULL)
 283              		.loc 1 266 0 is_stmt 1
 284 0060 FB68     		ldr	r3, [r7, #12]
 285 0062 002B     		cmp	r3, #0
 286 0064 00D1     		bne	.L13
 267:../lwip-1.4.1/src/core/netif.c ****       return; /*  we didn't find any netif today */
 287              		.loc 1 267 0 discriminator 2
 288 0066 07E0     		b	.L8
 289              	.L13:
 290              	.LBE2:
 268:../lwip-1.4.1/src/core/netif.c ****   }
 269:../lwip-1.4.1/src/core/netif.c ****   snmp_dec_iflist();
 270:../lwip-1.4.1/src/core/netif.c ****   /* this netif is default? */
 271:../lwip-1.4.1/src/core/netif.c ****   if (netif_default == netif) {
 291              		.loc 1 271 0
 292 0068 064B     		ldr	r3, .L19+4
 293 006a 1A68     		ldr	r2, [r3]
 294 006c 7B68     		ldr	r3, [r7, #4]
 295 006e 9A42     		cmp	r2, r3
 296 0070 02D1     		bne	.L8
 272:../lwip-1.4.1/src/core/netif.c ****     /* reset default netif */
 273:../lwip-1.4.1/src/core/netif.c ****     netif_set_default(NULL);
 297              		.loc 1 273 0
 298 0072 0020     		movs	r0, #0
 299 0074 FFF7FEFF 		bl	netif_set_default
 300              	.L8:
 274:../lwip-1.4.1/src/core/netif.c ****   }
 275:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 276:../lwip-1.4.1/src/core/netif.c ****   if (netif->remove_callback) {
 277:../lwip-1.4.1/src/core/netif.c ****     netif->remove_callback(netif);
 278:../lwip-1.4.1/src/core/netif.c ****   }
 279:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 280:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF( NETIF_DEBUG, ("netif_remove: removed netif\n") );
 281:../lwip-1.4.1/src/core/netif.c **** }
 301              		.loc 1 281 0
 302 0078 1037     		adds	r7, r7, #16
 303              		.cfi_def_cfa_offset 8
 304 007a BD46     		mov	sp, r7
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 007c 80BD     		pop	{r7, pc}
 308              	.L20:
 309 007e 00BF     		.align	2
 310              	.L19:
 311 0080 00000000 		.word	netif_list
 312 0084 00000000 		.word	netif_default
 313              		.cfi_endproc
 314              	.LFE3:
 316              		.section	.text.netif_find,"ax",%progbits
 317              		.align	2
 318              		.global	netif_find
 319              		.thumb
 320              		.thumb_func
 322              	netif_find:
 323              	.LFB4:
 282:../lwip-1.4.1/src/core/netif.c **** 
 283:../lwip-1.4.1/src/core/netif.c **** /**
 284:../lwip-1.4.1/src/core/netif.c ****  * Find a network interface by searching for its name
 285:../lwip-1.4.1/src/core/netif.c ****  *
 286:../lwip-1.4.1/src/core/netif.c ****  * @param name the name of the netif (like netif->name) plus concatenated number
 287:../lwip-1.4.1/src/core/netif.c ****  * in ascii representation (e.g. 'en0')
 288:../lwip-1.4.1/src/core/netif.c ****  */
 289:../lwip-1.4.1/src/core/netif.c **** struct netif *
 290:../lwip-1.4.1/src/core/netif.c **** netif_find(char *name)
 291:../lwip-1.4.1/src/core/netif.c **** {
 324              		.loc 1 291 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 16
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329 0000 80B4     		push	{r7}
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 7, -4
 332 0002 85B0     		sub	sp, sp, #20
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336 0006 7860     		str	r0, [r7, #4]
 292:../lwip-1.4.1/src/core/netif.c ****   struct netif *netif;
 293:../lwip-1.4.1/src/core/netif.c ****   u8_t num;
 294:../lwip-1.4.1/src/core/netif.c **** 
 295:../lwip-1.4.1/src/core/netif.c ****   if (name == NULL) {
 337              		.loc 1 295 0
 338 0008 7B68     		ldr	r3, [r7, #4]
 339 000a 002B     		cmp	r3, #0
 340 000c 01D1     		bne	.L22
 296:../lwip-1.4.1/src/core/netif.c ****     return NULL;
 341              		.loc 1 296 0
 342 000e 0023     		movs	r3, #0
 343 0010 26E0     		b	.L23
 344              	.L22:
 297:../lwip-1.4.1/src/core/netif.c ****   }
 298:../lwip-1.4.1/src/core/netif.c **** 
 299:../lwip-1.4.1/src/core/netif.c ****   num = name[2] - '0';
 345              		.loc 1 299 0
 346 0012 7B68     		ldr	r3, [r7, #4]
 347 0014 0233     		adds	r3, r3, #2
 348 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0018 303B     		subs	r3, r3, #48
 350 001a FB72     		strb	r3, [r7, #11]
 300:../lwip-1.4.1/src/core/netif.c **** 
 301:../lwip-1.4.1/src/core/netif.c ****   for(netif = netif_list; netif != NULL; netif = netif->next) {
 351              		.loc 1 301 0
 352 001c 134B     		ldr	r3, .L27
 353 001e 1B68     		ldr	r3, [r3]
 354 0020 FB60     		str	r3, [r7, #12]
 355 0022 19E0     		b	.L24
 356              	.L26:
 302:../lwip-1.4.1/src/core/netif.c ****     if (num == netif->num &&
 357              		.loc 1 302 0
 358 0024 FB68     		ldr	r3, [r7, #12]
 359 0026 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 360 002a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 361 002c 9A42     		cmp	r2, r3
 362 002e 10D1     		bne	.L25
 303:../lwip-1.4.1/src/core/netif.c ****        name[0] == netif->name[0] &&
 363              		.loc 1 303 0 discriminator 1
 364 0030 7B68     		ldr	r3, [r7, #4]
 365 0032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 366 0034 FB68     		ldr	r3, [r7, #12]
 367 0036 93F82A30 		ldrb	r3, [r3, #42]	@ zero_extendqisi2
 302:../lwip-1.4.1/src/core/netif.c ****     if (num == netif->num &&
 368              		.loc 1 302 0 discriminator 1
 369 003a 9A42     		cmp	r2, r3
 370 003c 09D1     		bne	.L25
 304:../lwip-1.4.1/src/core/netif.c ****        name[1] == netif->name[1]) {
 371              		.loc 1 304 0
 372 003e 7B68     		ldr	r3, [r7, #4]
 373 0040 0133     		adds	r3, r3, #1
 374 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 375 0044 FB68     		ldr	r3, [r7, #12]
 376 0046 93F82B30 		ldrb	r3, [r3, #43]	@ zero_extendqisi2
 303:../lwip-1.4.1/src/core/netif.c ****        name[0] == netif->name[0] &&
 377              		.loc 1 303 0
 378 004a 9A42     		cmp	r2, r3
 379 004c 01D1     		bne	.L25
 305:../lwip-1.4.1/src/core/netif.c ****       LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: found %c%c\n", name[0], name[1]));
 306:../lwip-1.4.1/src/core/netif.c ****       return netif;
 380              		.loc 1 306 0
 381 004e FB68     		ldr	r3, [r7, #12]
 382 0050 06E0     		b	.L23
 383              	.L25:
 301:../lwip-1.4.1/src/core/netif.c ****     if (num == netif->num &&
 384              		.loc 1 301 0 discriminator 2
 385 0052 FB68     		ldr	r3, [r7, #12]
 386 0054 1B68     		ldr	r3, [r3]
 387 0056 FB60     		str	r3, [r7, #12]
 388              	.L24:
 301:../lwip-1.4.1/src/core/netif.c ****     if (num == netif->num &&
 389              		.loc 1 301 0 is_stmt 0 discriminator 1
 390 0058 FB68     		ldr	r3, [r7, #12]
 391 005a 002B     		cmp	r3, #0
 392 005c E2D1     		bne	.L26
 307:../lwip-1.4.1/src/core/netif.c ****     }
 308:../lwip-1.4.1/src/core/netif.c ****   }
 309:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif_find: didn't find %c%c\n", name[0], name[1]));
 310:../lwip-1.4.1/src/core/netif.c ****   return NULL;
 393              		.loc 1 310 0 is_stmt 1
 394 005e 0023     		movs	r3, #0
 395              	.L23:
 311:../lwip-1.4.1/src/core/netif.c **** }
 396              		.loc 1 311 0
 397 0060 1846     		mov	r0, r3
 398 0062 1437     		adds	r7, r7, #20
 399              		.cfi_def_cfa_offset 4
 400 0064 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0066 5DF8047B 		ldr	r7, [sp], #4
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 006a 7047     		bx	lr
 407              	.L28:
 408              		.align	2
 409              	.L27:
 410 006c 00000000 		.word	netif_list
 411              		.cfi_endproc
 412              	.LFE4:
 414              		.section	.text.netif_set_ipaddr,"ax",%progbits
 415              		.align	2
 416              		.global	netif_set_ipaddr
 417              		.thumb
 418              		.thumb_func
 420              	netif_set_ipaddr:
 421              	.LFB5:
 312:../lwip-1.4.1/src/core/netif.c **** 
 313:../lwip-1.4.1/src/core/netif.c **** /**
 314:../lwip-1.4.1/src/core/netif.c ****  * Change the IP address of a network interface
 315:../lwip-1.4.1/src/core/netif.c ****  *
 316:../lwip-1.4.1/src/core/netif.c ****  * @param netif the network interface to change
 317:../lwip-1.4.1/src/core/netif.c ****  * @param ipaddr the new IP address
 318:../lwip-1.4.1/src/core/netif.c ****  *
 319:../lwip-1.4.1/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change netmask and
 320:../lwip-1.4.1/src/core/netif.c ****  * default gateway
 321:../lwip-1.4.1/src/core/netif.c ****  */
 322:../lwip-1.4.1/src/core/netif.c **** void
 323:../lwip-1.4.1/src/core/netif.c **** netif_set_ipaddr(struct netif *netif, ip_addr_t *ipaddr)
 324:../lwip-1.4.1/src/core/netif.c **** {
 422              		.loc 1 324 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 24
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 86B0     		sub	sp, sp, #24
 431              		.cfi_def_cfa_offset 32
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 435 0008 3960     		str	r1, [r7]
 325:../lwip-1.4.1/src/core/netif.c ****   /* TODO: Handling of obsolete pcbs */
 326:../lwip-1.4.1/src/core/netif.c ****   /* See:  http://mail.gnu.org/archive/html/lwip-users/2003-03/msg00118.html */
 327:../lwip-1.4.1/src/core/netif.c **** #if LWIP_TCP
 328:../lwip-1.4.1/src/core/netif.c ****   struct tcp_pcb *pcb;
 329:../lwip-1.4.1/src/core/netif.c ****   struct tcp_pcb_listen *lpcb;
 330:../lwip-1.4.1/src/core/netif.c **** 
 331:../lwip-1.4.1/src/core/netif.c ****   /* address is actually being changed? */
 332:../lwip-1.4.1/src/core/netif.c ****   if (ipaddr && (ip_addr_cmp(ipaddr, &(netif->ip_addr))) == 0) {
 436              		.loc 1 332 0
 437 000a 3B68     		ldr	r3, [r7]
 438 000c 002B     		cmp	r3, #0
 439 000e 3ED0     		beq	.L30
 440              		.loc 1 332 0 is_stmt 0 discriminator 1
 441 0010 3B68     		ldr	r3, [r7]
 442 0012 1A68     		ldr	r2, [r3]
 443 0014 7B68     		ldr	r3, [r7, #4]
 444 0016 5B68     		ldr	r3, [r3, #4]
 445 0018 9A42     		cmp	r2, r3
 446 001a 38D0     		beq	.L30
 333:../lwip-1.4.1/src/core/netif.c ****     /* extern struct tcp_pcb *tcp_active_pcbs; defined by tcp.h */
 334:../lwip-1.4.1/src/core/netif.c ****     LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: netif address being changed\n"));
 335:../lwip-1.4.1/src/core/netif.c ****     pcb = tcp_active_pcbs;
 447              		.loc 1 335 0 is_stmt 1
 448 001c 224B     		ldr	r3, .L41
 449 001e 1B68     		ldr	r3, [r3]
 450 0020 7B61     		str	r3, [r7, #20]
 336:../lwip-1.4.1/src/core/netif.c ****     while (pcb != NULL) {
 451              		.loc 1 336 0
 452 0022 11E0     		b	.L31
 453              	.L33:
 337:../lwip-1.4.1/src/core/netif.c ****       /* PCB bound to current local interface address? */
 338:../lwip-1.4.1/src/core/netif.c ****       if (ip_addr_cmp(&(pcb->local_ip), &(netif->ip_addr))
 454              		.loc 1 338 0
 455 0024 7B69     		ldr	r3, [r7, #20]
 456 0026 1A68     		ldr	r2, [r3]
 457 0028 7B68     		ldr	r3, [r7, #4]
 458 002a 5B68     		ldr	r3, [r3, #4]
 459 002c 9A42     		cmp	r2, r3
 460 002e 08D1     		bne	.L32
 461              	.LBB3:
 339:../lwip-1.4.1/src/core/netif.c **** #if LWIP_AUTOIP
 340:../lwip-1.4.1/src/core/netif.c ****         /* connections to link-local addresses must persist (RFC3927 ch. 1.9) */
 341:../lwip-1.4.1/src/core/netif.c ****         && !ip_addr_islinklocal(&(pcb->local_ip))
 342:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_AUTOIP */
 343:../lwip-1.4.1/src/core/netif.c ****         ) {
 344:../lwip-1.4.1/src/core/netif.c ****         /* this connection must be aborted */
 345:../lwip-1.4.1/src/core/netif.c ****         struct tcp_pcb *next = pcb->next;
 462              		.loc 1 345 0
 463 0030 7B69     		ldr	r3, [r7, #20]
 464 0032 DB68     		ldr	r3, [r3, #12]
 465 0034 FB60     		str	r3, [r7, #12]
 346:../lwip-1.4.1/src/core/netif.c ****         LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_STATE, ("netif_set_ipaddr: aborting TCP pcb %p\n", (void
 347:../lwip-1.4.1/src/core/netif.c ****         tcp_abort(pcb);
 466              		.loc 1 347 0
 467 0036 7869     		ldr	r0, [r7, #20]
 468 0038 FFF7FEFF 		bl	tcp_abort
 348:../lwip-1.4.1/src/core/netif.c ****         pcb = next;
 469              		.loc 1 348 0
 470 003c FB68     		ldr	r3, [r7, #12]
 471 003e 7B61     		str	r3, [r7, #20]
 472              	.LBE3:
 473 0040 02E0     		b	.L31
 474              	.L32:
 349:../lwip-1.4.1/src/core/netif.c ****       } else {
 350:../lwip-1.4.1/src/core/netif.c ****         pcb = pcb->next;
 475              		.loc 1 350 0
 476 0042 7B69     		ldr	r3, [r7, #20]
 477 0044 DB68     		ldr	r3, [r3, #12]
 478 0046 7B61     		str	r3, [r7, #20]
 479              	.L31:
 336:../lwip-1.4.1/src/core/netif.c ****       /* PCB bound to current local interface address? */
 480              		.loc 1 336 0
 481 0048 7B69     		ldr	r3, [r7, #20]
 482 004a 002B     		cmp	r3, #0
 483 004c EAD1     		bne	.L33
 351:../lwip-1.4.1/src/core/netif.c ****       }
 352:../lwip-1.4.1/src/core/netif.c ****     }
 353:../lwip-1.4.1/src/core/netif.c ****     for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
 484              		.loc 1 353 0
 485 004e 174B     		ldr	r3, .L41+4
 486 0050 1B68     		ldr	r3, [r3]
 487 0052 3B61     		str	r3, [r7, #16]
 488 0054 18E0     		b	.L34
 489              	.L38:
 354:../lwip-1.4.1/src/core/netif.c ****       /* PCB bound to current local interface address? */
 355:../lwip-1.4.1/src/core/netif.c ****       if ((!(ip_addr_isany(&(lpcb->local_ip)))) &&
 490              		.loc 1 355 0
 491 0056 3B69     		ldr	r3, [r7, #16]
 492 0058 002B     		cmp	r3, #0
 493 005a 12D0     		beq	.L35
 494              		.loc 1 355 0 is_stmt 0 discriminator 1
 495 005c 3B69     		ldr	r3, [r7, #16]
 496 005e 1B68     		ldr	r3, [r3]
 497 0060 002B     		cmp	r3, #0
 498 0062 0ED0     		beq	.L35
 356:../lwip-1.4.1/src/core/netif.c ****           (ip_addr_cmp(&(lpcb->local_ip), &(netif->ip_addr)))) {
 499              		.loc 1 356 0 is_stmt 1 discriminator 2
 500 0064 3B69     		ldr	r3, [r7, #16]
 501 0066 1A68     		ldr	r2, [r3]
 502 0068 7B68     		ldr	r3, [r7, #4]
 503 006a 5B68     		ldr	r3, [r3, #4]
 355:../lwip-1.4.1/src/core/netif.c ****           (ip_addr_cmp(&(lpcb->local_ip), &(netif->ip_addr)))) {
 504              		.loc 1 355 0 discriminator 2
 505 006c 9A42     		cmp	r2, r3
 506 006e 08D1     		bne	.L35
 357:../lwip-1.4.1/src/core/netif.c ****         /* The PCB is listening to the old ipaddr and
 358:../lwip-1.4.1/src/core/netif.c ****          * is set to listen to the new one instead */
 359:../lwip-1.4.1/src/core/netif.c ****         ip_addr_set(&(lpcb->local_ip), ipaddr);
 507              		.loc 1 359 0
 508 0070 3B68     		ldr	r3, [r7]
 509 0072 002B     		cmp	r3, #0
 510 0074 02D0     		beq	.L36
 511              		.loc 1 359 0 is_stmt 0 discriminator 1
 512 0076 3B68     		ldr	r3, [r7]
 513 0078 1B68     		ldr	r3, [r3]
 514 007a 00E0     		b	.L37
 515              	.L36:
 516              		.loc 1 359 0 discriminator 2
 517 007c 0023     		movs	r3, #0
 518              	.L37:
 519              		.loc 1 359 0 discriminator 4
 520 007e 3A69     		ldr	r2, [r7, #16]
 521 0080 1360     		str	r3, [r2]
 522              	.L35:
 353:../lwip-1.4.1/src/core/netif.c ****       /* PCB bound to current local interface address? */
 523              		.loc 1 353 0 is_stmt 1 discriminator 2
 524 0082 3B69     		ldr	r3, [r7, #16]
 525 0084 DB68     		ldr	r3, [r3, #12]
 526 0086 3B61     		str	r3, [r7, #16]
 527              	.L34:
 353:../lwip-1.4.1/src/core/netif.c ****       /* PCB bound to current local interface address? */
 528              		.loc 1 353 0 is_stmt 0 discriminator 1
 529 0088 3B69     		ldr	r3, [r7, #16]
 530 008a 002B     		cmp	r3, #0
 531 008c E3D1     		bne	.L38
 532              	.L30:
 360:../lwip-1.4.1/src/core/netif.c ****       }
 361:../lwip-1.4.1/src/core/netif.c ****     }
 362:../lwip-1.4.1/src/core/netif.c ****   }
 363:../lwip-1.4.1/src/core/netif.c **** #endif
 364:../lwip-1.4.1/src/core/netif.c ****   snmp_delete_ipaddridx_tree(netif);
 365:../lwip-1.4.1/src/core/netif.c ****   snmp_delete_iprteidx_tree(0,netif);
 366:../lwip-1.4.1/src/core/netif.c ****   /* set new IP address to netif */
 367:../lwip-1.4.1/src/core/netif.c ****   ip_addr_set(&(netif->ip_addr), ipaddr);
 533              		.loc 1 367 0 is_stmt 1
 534 008e 3B68     		ldr	r3, [r7]
 535 0090 002B     		cmp	r3, #0
 536 0092 02D0     		beq	.L39
 537              		.loc 1 367 0 is_stmt 0 discriminator 1
 538 0094 3B68     		ldr	r3, [r7]
 539 0096 1B68     		ldr	r3, [r3]
 540 0098 00E0     		b	.L40
 541              	.L39:
 542              		.loc 1 367 0 discriminator 2
 543 009a 0023     		movs	r3, #0
 544              	.L40:
 545              		.loc 1 367 0 discriminator 4
 546 009c 7A68     		ldr	r2, [r7, #4]
 547 009e 5360     		str	r3, [r2, #4]
 368:../lwip-1.4.1/src/core/netif.c ****   snmp_insert_ipaddridx_tree(netif);
 369:../lwip-1.4.1/src/core/netif.c ****   snmp_insert_iprteidx_tree(0,netif);
 370:../lwip-1.4.1/src/core/netif.c **** 
 371:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: IP address of interface %c%c 
 372:../lwip-1.4.1/src/core/netif.c ****     netif->name[0], netif->name[1],
 373:../lwip-1.4.1/src/core/netif.c ****     ip4_addr1_16(&netif->ip_addr),
 374:../lwip-1.4.1/src/core/netif.c ****     ip4_addr2_16(&netif->ip_addr),
 375:../lwip-1.4.1/src/core/netif.c ****     ip4_addr3_16(&netif->ip_addr),
 376:../lwip-1.4.1/src/core/netif.c ****     ip4_addr4_16(&netif->ip_addr)));
 377:../lwip-1.4.1/src/core/netif.c **** }
 548              		.loc 1 377 0 is_stmt 1 discriminator 4
 549 00a0 1837     		adds	r7, r7, #24
 550              		.cfi_def_cfa_offset 8
 551 00a2 BD46     		mov	sp, r7
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 00a4 80BD     		pop	{r7, pc}
 555              	.L42:
 556 00a6 00BF     		.align	2
 557              	.L41:
 558 00a8 00000000 		.word	tcp_active_pcbs
 559 00ac 00000000 		.word	tcp_listen_pcbs
 560              		.cfi_endproc
 561              	.LFE5:
 563              		.section	.text.netif_set_gw,"ax",%progbits
 564              		.align	2
 565              		.global	netif_set_gw
 566              		.thumb
 567              		.thumb_func
 569              	netif_set_gw:
 570              	.LFB6:
 378:../lwip-1.4.1/src/core/netif.c **** 
 379:../lwip-1.4.1/src/core/netif.c **** /**
 380:../lwip-1.4.1/src/core/netif.c ****  * Change the default gateway for a network interface
 381:../lwip-1.4.1/src/core/netif.c ****  *
 382:../lwip-1.4.1/src/core/netif.c ****  * @param netif the network interface to change
 383:../lwip-1.4.1/src/core/netif.c ****  * @param gw the new default gateway
 384:../lwip-1.4.1/src/core/netif.c ****  *
 385:../lwip-1.4.1/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and netmask
 386:../lwip-1.4.1/src/core/netif.c ****  */
 387:../lwip-1.4.1/src/core/netif.c **** void
 388:../lwip-1.4.1/src/core/netif.c **** netif_set_gw(struct netif *netif, ip_addr_t *gw)
 389:../lwip-1.4.1/src/core/netif.c **** {
 571              		.loc 1 389 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 8
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576 0000 80B4     		push	{r7}
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 7, -4
 579 0002 83B0     		sub	sp, sp, #12
 580              		.cfi_def_cfa_offset 16
 581 0004 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 583 0006 7860     		str	r0, [r7, #4]
 584 0008 3960     		str	r1, [r7]
 390:../lwip-1.4.1/src/core/netif.c ****   ip_addr_set(&(netif->gw), gw);
 585              		.loc 1 390 0
 586 000a 3B68     		ldr	r3, [r7]
 587 000c 002B     		cmp	r3, #0
 588 000e 02D0     		beq	.L44
 589              		.loc 1 390 0 is_stmt 0 discriminator 1
 590 0010 3B68     		ldr	r3, [r7]
 591 0012 1B68     		ldr	r3, [r3]
 592 0014 00E0     		b	.L45
 593              	.L44:
 594              		.loc 1 390 0 discriminator 2
 595 0016 0023     		movs	r3, #0
 596              	.L45:
 597              		.loc 1 390 0 discriminator 4
 598 0018 7A68     		ldr	r2, [r7, #4]
 599 001a D360     		str	r3, [r2, #12]
 391:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: GW address of interface %c%c 
 392:../lwip-1.4.1/src/core/netif.c ****     netif->name[0], netif->name[1],
 393:../lwip-1.4.1/src/core/netif.c ****     ip4_addr1_16(&netif->gw),
 394:../lwip-1.4.1/src/core/netif.c ****     ip4_addr2_16(&netif->gw),
 395:../lwip-1.4.1/src/core/netif.c ****     ip4_addr3_16(&netif->gw),
 396:../lwip-1.4.1/src/core/netif.c ****     ip4_addr4_16(&netif->gw)));
 397:../lwip-1.4.1/src/core/netif.c **** }
 600              		.loc 1 397 0 is_stmt 1 discriminator 4
 601 001c 0C37     		adds	r7, r7, #12
 602              		.cfi_def_cfa_offset 4
 603 001e BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 0020 5DF8047B 		ldr	r7, [sp], #4
 607              		.cfi_restore 7
 608              		.cfi_def_cfa_offset 0
 609 0024 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE6:
 613 0026 00BF     		.section	.text.netif_set_netmask,"ax",%progbits
 614              		.align	2
 615              		.global	netif_set_netmask
 616              		.thumb
 617              		.thumb_func
 619              	netif_set_netmask:
 620              	.LFB7:
 398:../lwip-1.4.1/src/core/netif.c **** 
 399:../lwip-1.4.1/src/core/netif.c **** /**
 400:../lwip-1.4.1/src/core/netif.c ****  * Change the netmask of a network interface
 401:../lwip-1.4.1/src/core/netif.c ****  *
 402:../lwip-1.4.1/src/core/netif.c ****  * @param netif the network interface to change
 403:../lwip-1.4.1/src/core/netif.c ****  * @param netmask the new netmask
 404:../lwip-1.4.1/src/core/netif.c ****  *
 405:../lwip-1.4.1/src/core/netif.c ****  * @note call netif_set_addr() if you also want to change ip address and
 406:../lwip-1.4.1/src/core/netif.c ****  * default gateway
 407:../lwip-1.4.1/src/core/netif.c ****  */
 408:../lwip-1.4.1/src/core/netif.c **** void
 409:../lwip-1.4.1/src/core/netif.c **** netif_set_netmask(struct netif *netif, ip_addr_t *netmask)
 410:../lwip-1.4.1/src/core/netif.c **** {
 621              		.loc 1 410 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 7, -4
 629 0002 83B0     		sub	sp, sp, #12
 630              		.cfi_def_cfa_offset 16
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633 0006 7860     		str	r0, [r7, #4]
 634 0008 3960     		str	r1, [r7]
 411:../lwip-1.4.1/src/core/netif.c ****   snmp_delete_iprteidx_tree(0, netif);
 412:../lwip-1.4.1/src/core/netif.c ****   /* set new netmask to netif */
 413:../lwip-1.4.1/src/core/netif.c ****   ip_addr_set(&(netif->netmask), netmask);
 635              		.loc 1 413 0
 636 000a 3B68     		ldr	r3, [r7]
 637 000c 002B     		cmp	r3, #0
 638 000e 02D0     		beq	.L47
 639              		.loc 1 413 0 is_stmt 0 discriminator 1
 640 0010 3B68     		ldr	r3, [r7]
 641 0012 1B68     		ldr	r3, [r3]
 642 0014 00E0     		b	.L48
 643              	.L47:
 644              		.loc 1 413 0 discriminator 2
 645 0016 0023     		movs	r3, #0
 646              	.L48:
 647              		.loc 1 413 0 discriminator 4
 648 0018 7A68     		ldr	r2, [r7, #4]
 649 001a 9360     		str	r3, [r2, #8]
 414:../lwip-1.4.1/src/core/netif.c ****   snmp_insert_iprteidx_tree(0, netif);
 415:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("netif: netmask of interface %c%c set
 416:../lwip-1.4.1/src/core/netif.c ****     netif->name[0], netif->name[1],
 417:../lwip-1.4.1/src/core/netif.c ****     ip4_addr1_16(&netif->netmask),
 418:../lwip-1.4.1/src/core/netif.c ****     ip4_addr2_16(&netif->netmask),
 419:../lwip-1.4.1/src/core/netif.c ****     ip4_addr3_16(&netif->netmask),
 420:../lwip-1.4.1/src/core/netif.c ****     ip4_addr4_16(&netif->netmask)));
 421:../lwip-1.4.1/src/core/netif.c **** }
 650              		.loc 1 421 0 is_stmt 1 discriminator 4
 651 001c 0C37     		adds	r7, r7, #12
 652              		.cfi_def_cfa_offset 4
 653 001e BD46     		mov	sp, r7
 654              		.cfi_def_cfa_register 13
 655              		@ sp needed
 656 0020 5DF8047B 		ldr	r7, [sp], #4
 657              		.cfi_restore 7
 658              		.cfi_def_cfa_offset 0
 659 0024 7047     		bx	lr
 660              		.cfi_endproc
 661              	.LFE7:
 663 0026 00BF     		.section	.text.netif_set_default,"ax",%progbits
 664              		.align	2
 665              		.global	netif_set_default
 666              		.thumb
 667              		.thumb_func
 669              	netif_set_default:
 670              	.LFB8:
 422:../lwip-1.4.1/src/core/netif.c **** 
 423:../lwip-1.4.1/src/core/netif.c **** /**
 424:../lwip-1.4.1/src/core/netif.c ****  * Set a network interface as the default network interface
 425:../lwip-1.4.1/src/core/netif.c ****  * (used to output all packets for which no specific route is found)
 426:../lwip-1.4.1/src/core/netif.c ****  *
 427:../lwip-1.4.1/src/core/netif.c ****  * @param netif the default network interface
 428:../lwip-1.4.1/src/core/netif.c ****  */
 429:../lwip-1.4.1/src/core/netif.c **** void
 430:../lwip-1.4.1/src/core/netif.c **** netif_set_default(struct netif *netif)
 431:../lwip-1.4.1/src/core/netif.c **** {
 671              		.loc 1 431 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 8
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 676 0000 80B4     		push	{r7}
 677              		.cfi_def_cfa_offset 4
 678              		.cfi_offset 7, -4
 679 0002 83B0     		sub	sp, sp, #12
 680              		.cfi_def_cfa_offset 16
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683 0006 7860     		str	r0, [r7, #4]
 432:../lwip-1.4.1/src/core/netif.c ****   if (netif == NULL) {
 433:../lwip-1.4.1/src/core/netif.c ****     /* remove default route */
 434:../lwip-1.4.1/src/core/netif.c ****     snmp_delete_iprteidx_tree(1, netif);
 435:../lwip-1.4.1/src/core/netif.c ****   } else {
 436:../lwip-1.4.1/src/core/netif.c ****     /* install default route */
 437:../lwip-1.4.1/src/core/netif.c ****     snmp_insert_iprteidx_tree(1, netif);
 438:../lwip-1.4.1/src/core/netif.c ****   }
 439:../lwip-1.4.1/src/core/netif.c ****   netif_default = netif;
 684              		.loc 1 439 0
 685 0008 034A     		ldr	r2, .L50
 686 000a 7B68     		ldr	r3, [r7, #4]
 687 000c 1360     		str	r3, [r2]
 440:../lwip-1.4.1/src/core/netif.c ****   LWIP_DEBUGF(NETIF_DEBUG, ("netif: setting default interface %c%c\n",
 441:../lwip-1.4.1/src/core/netif.c ****            netif ? netif->name[0] : '\'', netif ? netif->name[1] : '\''));
 442:../lwip-1.4.1/src/core/netif.c **** }
 688              		.loc 1 442 0
 689 000e 0C37     		adds	r7, r7, #12
 690              		.cfi_def_cfa_offset 4
 691 0010 BD46     		mov	sp, r7
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0012 5DF8047B 		ldr	r7, [sp], #4
 695              		.cfi_restore 7
 696              		.cfi_def_cfa_offset 0
 697 0016 7047     		bx	lr
 698              	.L51:
 699              		.align	2
 700              	.L50:
 701 0018 00000000 		.word	netif_default
 702              		.cfi_endproc
 703              	.LFE8:
 705              		.section	.text.netif_set_up,"ax",%progbits
 706              		.align	2
 707              		.global	netif_set_up
 708              		.thumb
 709              		.thumb_func
 711              	netif_set_up:
 712              	.LFB9:
 443:../lwip-1.4.1/src/core/netif.c **** 
 444:../lwip-1.4.1/src/core/netif.c **** /**
 445:../lwip-1.4.1/src/core/netif.c ****  * Bring an interface up, available for processing
 446:../lwip-1.4.1/src/core/netif.c ****  * traffic.
 447:../lwip-1.4.1/src/core/netif.c ****  * 
 448:../lwip-1.4.1/src/core/netif.c ****  * @note: Enabling DHCP on a down interface will make it come
 449:../lwip-1.4.1/src/core/netif.c ****  * up once configured.
 450:../lwip-1.4.1/src/core/netif.c ****  * 
 451:../lwip-1.4.1/src/core/netif.c ****  * @see dhcp_start()
 452:../lwip-1.4.1/src/core/netif.c ****  */ 
 453:../lwip-1.4.1/src/core/netif.c **** void netif_set_up(struct netif *netif)
 454:../lwip-1.4.1/src/core/netif.c **** {
 713              		.loc 1 454 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 8
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 82B0     		sub	sp, sp, #8
 722              		.cfi_def_cfa_offset 16
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 455:../lwip-1.4.1/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_UP)) {
 726              		.loc 1 455 0
 727 0008 7B68     		ldr	r3, [r7, #4]
 728 000a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 729 000e 03F00103 		and	r3, r3, #1
 730 0012 002B     		cmp	r3, #0
 731 0014 1CD1     		bne	.L52
 456:../lwip-1.4.1/src/core/netif.c ****     netif->flags |= NETIF_FLAG_UP;
 732              		.loc 1 456 0
 733 0016 7B68     		ldr	r3, [r7, #4]
 734 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 735 001c 43F00103 		orr	r3, r3, #1
 736 0020 DAB2     		uxtb	r2, r3
 737 0022 7B68     		ldr	r3, [r7, #4]
 738 0024 83F82920 		strb	r2, [r3, #41]
 457:../lwip-1.4.1/src/core/netif.c ****     
 458:../lwip-1.4.1/src/core/netif.c **** #if LWIP_SNMP
 459:../lwip-1.4.1/src/core/netif.c ****     snmp_get_sysuptime(&netif->ts);
 460:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_SNMP */
 461:../lwip-1.4.1/src/core/netif.c **** 
 462:../lwip-1.4.1/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 463:../lwip-1.4.1/src/core/netif.c **** 
 464:../lwip-1.4.1/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_LINK_UP) {
 739              		.loc 1 464 0
 740 0028 7B68     		ldr	r3, [r7, #4]
 741 002a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 742 002e 03F01003 		and	r3, r3, #16
 743 0032 002B     		cmp	r3, #0
 744 0034 0CD0     		beq	.L52
 465:../lwip-1.4.1/src/core/netif.c **** #if LWIP_ARP
 466:../lwip-1.4.1/src/core/netif.c ****       /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */ 
 467:../lwip-1.4.1/src/core/netif.c ****       if (netif->flags & (NETIF_FLAG_ETHARP)) {
 745              		.loc 1 467 0
 746 0036 7B68     		ldr	r3, [r7, #4]
 747 0038 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 748 003c 03F02003 		and	r3, r3, #32
 749 0040 002B     		cmp	r3, #0
 750 0042 05D0     		beq	.L52
 468:../lwip-1.4.1/src/core/netif.c ****         etharp_gratuitous(netif);
 751              		.loc 1 468 0
 752 0044 7B68     		ldr	r3, [r7, #4]
 753 0046 0433     		adds	r3, r3, #4
 754 0048 7868     		ldr	r0, [r7, #4]
 755 004a 1946     		mov	r1, r3
 756 004c FFF7FEFF 		bl	etharp_request
 757              	.L52:
 469:../lwip-1.4.1/src/core/netif.c ****       }
 470:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_ARP */
 471:../lwip-1.4.1/src/core/netif.c **** 
 472:../lwip-1.4.1/src/core/netif.c **** #if LWIP_IGMP
 473:../lwip-1.4.1/src/core/netif.c ****       /* resend IGMP memberships */
 474:../lwip-1.4.1/src/core/netif.c ****       if (netif->flags & NETIF_FLAG_IGMP) {
 475:../lwip-1.4.1/src/core/netif.c ****         igmp_report_groups( netif);
 476:../lwip-1.4.1/src/core/netif.c ****       }
 477:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_IGMP */
 478:../lwip-1.4.1/src/core/netif.c ****     }
 479:../lwip-1.4.1/src/core/netif.c ****   }
 480:../lwip-1.4.1/src/core/netif.c **** }
 758              		.loc 1 480 0
 759 0050 0837     		adds	r7, r7, #8
 760              		.cfi_def_cfa_offset 8
 761 0052 BD46     		mov	sp, r7
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 0054 80BD     		pop	{r7, pc}
 765              		.cfi_endproc
 766              	.LFE9:
 768 0056 00BF     		.section	.text.netif_set_down,"ax",%progbits
 769              		.align	2
 770              		.global	netif_set_down
 771              		.thumb
 772              		.thumb_func
 774              	netif_set_down:
 775              	.LFB10:
 481:../lwip-1.4.1/src/core/netif.c **** 
 482:../lwip-1.4.1/src/core/netif.c **** /**
 483:../lwip-1.4.1/src/core/netif.c ****  * Bring an interface down, disabling any traffic processing.
 484:../lwip-1.4.1/src/core/netif.c ****  *
 485:../lwip-1.4.1/src/core/netif.c ****  * @note: Enabling DHCP on a down interface will make it come
 486:../lwip-1.4.1/src/core/netif.c ****  * up once configured.
 487:../lwip-1.4.1/src/core/netif.c ****  * 
 488:../lwip-1.4.1/src/core/netif.c ****  * @see dhcp_start()
 489:../lwip-1.4.1/src/core/netif.c ****  */ 
 490:../lwip-1.4.1/src/core/netif.c **** void netif_set_down(struct netif *netif)
 491:../lwip-1.4.1/src/core/netif.c **** {
 776              		.loc 1 491 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 80B5     		push	{r7, lr}
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 82B0     		sub	sp, sp, #8
 785              		.cfi_def_cfa_offset 16
 786 0004 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 788 0006 7860     		str	r0, [r7, #4]
 492:../lwip-1.4.1/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_UP) {
 789              		.loc 1 492 0
 790 0008 7B68     		ldr	r3, [r7, #4]
 791 000a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 792 000e 03F00103 		and	r3, r3, #1
 793 0012 002B     		cmp	r3, #0
 794 0014 12D0     		beq	.L54
 493:../lwip-1.4.1/src/core/netif.c ****     netif->flags &= ~NETIF_FLAG_UP;
 795              		.loc 1 493 0
 796 0016 7B68     		ldr	r3, [r7, #4]
 797 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 798 001c 23F00103 		bic	r3, r3, #1
 799 0020 DAB2     		uxtb	r2, r3
 800 0022 7B68     		ldr	r3, [r7, #4]
 801 0024 83F82920 		strb	r2, [r3, #41]
 494:../lwip-1.4.1/src/core/netif.c **** #if LWIP_SNMP
 495:../lwip-1.4.1/src/core/netif.c ****     snmp_get_sysuptime(&netif->ts);
 496:../lwip-1.4.1/src/core/netif.c **** #endif
 497:../lwip-1.4.1/src/core/netif.c **** 
 498:../lwip-1.4.1/src/core/netif.c **** #if LWIP_ARP
 499:../lwip-1.4.1/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_ETHARP) {
 802              		.loc 1 499 0
 803 0028 7B68     		ldr	r3, [r7, #4]
 804 002a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 805 002e 03F02003 		and	r3, r3, #32
 806 0032 002B     		cmp	r3, #0
 807 0034 02D0     		beq	.L54
 500:../lwip-1.4.1/src/core/netif.c ****       etharp_cleanup_netif(netif);
 808              		.loc 1 500 0
 809 0036 7868     		ldr	r0, [r7, #4]
 810 0038 FFF7FEFF 		bl	etharp_cleanup_netif
 811              	.L54:
 501:../lwip-1.4.1/src/core/netif.c ****     }
 502:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_ARP */
 503:../lwip-1.4.1/src/core/netif.c ****     NETIF_STATUS_CALLBACK(netif);
 504:../lwip-1.4.1/src/core/netif.c ****   }
 505:../lwip-1.4.1/src/core/netif.c **** }
 812              		.loc 1 505 0
 813 003c 0837     		adds	r7, r7, #8
 814              		.cfi_def_cfa_offset 8
 815 003e BD46     		mov	sp, r7
 816              		.cfi_def_cfa_register 13
 817              		@ sp needed
 818 0040 80BD     		pop	{r7, pc}
 819              		.cfi_endproc
 820              	.LFE10:
 822 0042 00BF     		.section	.text.netif_set_link_up,"ax",%progbits
 823              		.align	2
 824              		.global	netif_set_link_up
 825              		.thumb
 826              		.thumb_func
 828              	netif_set_link_up:
 829              	.LFB11:
 506:../lwip-1.4.1/src/core/netif.c **** 
 507:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_STATUS_CALLBACK
 508:../lwip-1.4.1/src/core/netif.c **** /**
 509:../lwip-1.4.1/src/core/netif.c ****  * Set callback to be called when interface is brought up/down
 510:../lwip-1.4.1/src/core/netif.c ****  */
 511:../lwip-1.4.1/src/core/netif.c **** void netif_set_status_callback(struct netif *netif, netif_status_callback_fn status_callback)
 512:../lwip-1.4.1/src/core/netif.c **** {
 513:../lwip-1.4.1/src/core/netif.c ****   if (netif) {
 514:../lwip-1.4.1/src/core/netif.c ****     netif->status_callback = status_callback;
 515:../lwip-1.4.1/src/core/netif.c ****   }
 516:../lwip-1.4.1/src/core/netif.c **** }
 517:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_STATUS_CALLBACK */
 518:../lwip-1.4.1/src/core/netif.c **** 
 519:../lwip-1.4.1/src/core/netif.c **** #if LWIP_NETIF_REMOVE_CALLBACK
 520:../lwip-1.4.1/src/core/netif.c **** /**
 521:../lwip-1.4.1/src/core/netif.c ****  * Set callback to be called when the interface has been removed
 522:../lwip-1.4.1/src/core/netif.c ****  */
 523:../lwip-1.4.1/src/core/netif.c **** void
 524:../lwip-1.4.1/src/core/netif.c **** netif_set_remove_callback(struct netif *netif, netif_status_callback_fn remove_callback)
 525:../lwip-1.4.1/src/core/netif.c **** {
 526:../lwip-1.4.1/src/core/netif.c ****   if (netif) {
 527:../lwip-1.4.1/src/core/netif.c ****     netif->remove_callback = remove_callback;
 528:../lwip-1.4.1/src/core/netif.c ****   }
 529:../lwip-1.4.1/src/core/netif.c **** }
 530:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_NETIF_REMOVE_CALLBACK */
 531:../lwip-1.4.1/src/core/netif.c **** 
 532:../lwip-1.4.1/src/core/netif.c **** /**
 533:../lwip-1.4.1/src/core/netif.c ****  * Called by a driver when its link goes up
 534:../lwip-1.4.1/src/core/netif.c ****  */
 535:../lwip-1.4.1/src/core/netif.c **** void netif_set_link_up(struct netif *netif )
 536:../lwip-1.4.1/src/core/netif.c **** {
 830              		.loc 1 536 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 8
 833              		@ frame_needed = 1, uses_anonymous_args = 0
 834 0000 80B5     		push	{r7, lr}
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 7, -8
 837              		.cfi_offset 14, -4
 838 0002 82B0     		sub	sp, sp, #8
 839              		.cfi_def_cfa_offset 16
 840 0004 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 842 0006 7860     		str	r0, [r7, #4]
 537:../lwip-1.4.1/src/core/netif.c ****   if (!(netif->flags & NETIF_FLAG_LINK_UP)) {
 843              		.loc 1 537 0
 844 0008 7B68     		ldr	r3, [r7, #4]
 845 000a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 846 000e 03F01003 		and	r3, r3, #16
 847 0012 002B     		cmp	r3, #0
 848 0014 1CD1     		bne	.L56
 538:../lwip-1.4.1/src/core/netif.c ****     netif->flags |= NETIF_FLAG_LINK_UP;
 849              		.loc 1 538 0
 850 0016 7B68     		ldr	r3, [r7, #4]
 851 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 852 001c 43F01003 		orr	r3, r3, #16
 853 0020 DAB2     		uxtb	r2, r3
 854 0022 7B68     		ldr	r3, [r7, #4]
 855 0024 83F82920 		strb	r2, [r3, #41]
 539:../lwip-1.4.1/src/core/netif.c **** 
 540:../lwip-1.4.1/src/core/netif.c **** #if LWIP_DHCP
 541:../lwip-1.4.1/src/core/netif.c ****     if (netif->dhcp) {
 542:../lwip-1.4.1/src/core/netif.c ****       dhcp_network_changed(netif);
 543:../lwip-1.4.1/src/core/netif.c ****     }
 544:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_DHCP */
 545:../lwip-1.4.1/src/core/netif.c **** 
 546:../lwip-1.4.1/src/core/netif.c **** #if LWIP_AUTOIP
 547:../lwip-1.4.1/src/core/netif.c ****     if (netif->autoip) {
 548:../lwip-1.4.1/src/core/netif.c ****       autoip_network_changed(netif);
 549:../lwip-1.4.1/src/core/netif.c ****     }
 550:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_AUTOIP */
 551:../lwip-1.4.1/src/core/netif.c **** 
 552:../lwip-1.4.1/src/core/netif.c ****     if (netif->flags & NETIF_FLAG_UP) {
 856              		.loc 1 552 0
 857 0028 7B68     		ldr	r3, [r7, #4]
 858 002a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 859 002e 03F00103 		and	r3, r3, #1
 860 0032 002B     		cmp	r3, #0
 861 0034 0CD0     		beq	.L56
 553:../lwip-1.4.1/src/core/netif.c **** #if LWIP_ARP
 554:../lwip-1.4.1/src/core/netif.c ****       /* For Ethernet network interfaces, we would like to send a "gratuitous ARP" */ 
 555:../lwip-1.4.1/src/core/netif.c ****       if (netif->flags & NETIF_FLAG_ETHARP) {
 862              		.loc 1 555 0
 863 0036 7B68     		ldr	r3, [r7, #4]
 864 0038 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 865 003c 03F02003 		and	r3, r3, #32
 866 0040 002B     		cmp	r3, #0
 867 0042 05D0     		beq	.L56
 556:../lwip-1.4.1/src/core/netif.c ****         etharp_gratuitous(netif);
 868              		.loc 1 556 0
 869 0044 7B68     		ldr	r3, [r7, #4]
 870 0046 0433     		adds	r3, r3, #4
 871 0048 7868     		ldr	r0, [r7, #4]
 872 004a 1946     		mov	r1, r3
 873 004c FFF7FEFF 		bl	etharp_request
 874              	.L56:
 557:../lwip-1.4.1/src/core/netif.c ****       }
 558:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_ARP */
 559:../lwip-1.4.1/src/core/netif.c **** 
 560:../lwip-1.4.1/src/core/netif.c **** #if LWIP_IGMP
 561:../lwip-1.4.1/src/core/netif.c ****       /* resend IGMP memberships */
 562:../lwip-1.4.1/src/core/netif.c ****       if (netif->flags & NETIF_FLAG_IGMP) {
 563:../lwip-1.4.1/src/core/netif.c ****         igmp_report_groups( netif);
 564:../lwip-1.4.1/src/core/netif.c ****       }
 565:../lwip-1.4.1/src/core/netif.c **** #endif /* LWIP_IGMP */
 566:../lwip-1.4.1/src/core/netif.c ****     }
 567:../lwip-1.4.1/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 568:../lwip-1.4.1/src/core/netif.c ****   }
 569:../lwip-1.4.1/src/core/netif.c **** }
 875              		.loc 1 569 0
 876 0050 0837     		adds	r7, r7, #8
 877              		.cfi_def_cfa_offset 8
 878 0052 BD46     		mov	sp, r7
 879              		.cfi_def_cfa_register 13
 880              		@ sp needed
 881 0054 80BD     		pop	{r7, pc}
 882              		.cfi_endproc
 883              	.LFE11:
 885 0056 00BF     		.section	.text.netif_set_link_down,"ax",%progbits
 886              		.align	2
 887              		.global	netif_set_link_down
 888              		.thumb
 889              		.thumb_func
 891              	netif_set_link_down:
 892              	.LFB12:
 570:../lwip-1.4.1/src/core/netif.c **** 
 571:../lwip-1.4.1/src/core/netif.c **** /**
 572:../lwip-1.4.1/src/core/netif.c ****  * Called by a driver when its link goes down
 573:../lwip-1.4.1/src/core/netif.c ****  */
 574:../lwip-1.4.1/src/core/netif.c **** void netif_set_link_down(struct netif *netif )
 575:../lwip-1.4.1/src/core/netif.c **** {
 893              		.loc 1 575 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898 0000 80B4     		push	{r7}
 899              		.cfi_def_cfa_offset 4
 900              		.cfi_offset 7, -4
 901 0002 83B0     		sub	sp, sp, #12
 902              		.cfi_def_cfa_offset 16
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 905 0006 7860     		str	r0, [r7, #4]
 576:../lwip-1.4.1/src/core/netif.c ****   if (netif->flags & NETIF_FLAG_LINK_UP) {
 906              		.loc 1 576 0
 907 0008 7B68     		ldr	r3, [r7, #4]
 908 000a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 909 000e 03F01003 		and	r3, r3, #16
 910 0012 002B     		cmp	r3, #0
 911 0014 08D0     		beq	.L58
 577:../lwip-1.4.1/src/core/netif.c ****     netif->flags &= ~NETIF_FLAG_LINK_UP;
 912              		.loc 1 577 0
 913 0016 7B68     		ldr	r3, [r7, #4]
 914 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 915 001c 23F01003 		bic	r3, r3, #16
 916 0020 DAB2     		uxtb	r2, r3
 917 0022 7B68     		ldr	r3, [r7, #4]
 918 0024 83F82920 		strb	r2, [r3, #41]
 919              	.L58:
 578:../lwip-1.4.1/src/core/netif.c ****     NETIF_LINK_CALLBACK(netif);
 579:../lwip-1.4.1/src/core/netif.c ****   }
 580:../lwip-1.4.1/src/core/netif.c **** }
 920              		.loc 1 580 0
 921 0028 0C37     		adds	r7, r7, #12
 922              		.cfi_def_cfa_offset 4
 923 002a BD46     		mov	sp, r7
 924              		.cfi_def_cfa_register 13
 925              		@ sp needed
 926 002c 5DF8047B 		ldr	r7, [sp], #4
 927              		.cfi_restore 7
 928              		.cfi_def_cfa_offset 0
 929 0030 7047     		bx	lr
 930              		.cfi_endproc
 931              	.LFE12:
 933 0032 00BF     		.text
 934              	.Letext0:
 935              		.file 2 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\port/arch/cc.h"
 936              		.file 3 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include\\ipv4/lwip/
 937              		.file 4 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/err.h"
 938              		.file 5 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/pbuf.h
 939              		.file 6 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/netif.
 940              		.file 7 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/tcp.h"
 941              		.file 8 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/tcp_im
 942              		.file 9 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\lwip-1.4.1\\src\\include/lwip/memp.h
DEFINED SYMBOLS
                            *ABS*:00000000 netif.c
                            *COM*:00000004 netif_list
                            *COM*:00000004 netif_default
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:21     .bss:00000000 netif_num
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:22     .bss:00000000 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:24     .text.netif_init:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:29     .text.netif_init:00000000 netif_init
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:54     .text.netif_add:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:59     .text.netif_add:00000000 netif_add
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:161    .text.netif_set_addr:00000000 netif_set_addr
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:150    .text.netif_add:0000007c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:156    .text.netif_set_addr:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:420    .text.netif_set_ipaddr:00000000 netif_set_ipaddr
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:619    .text.netif_set_netmask:00000000 netif_set_netmask
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:569    .text.netif_set_gw:00000000 netif_set_gw
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:202    .text.netif_remove:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:207    .text.netif_remove:00000000 netif_remove
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:774    .text.netif_set_down:00000000 netif_set_down
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:669    .text.netif_set_default:00000000 netif_set_default
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:311    .text.netif_remove:00000080 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:317    .text.netif_find:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:322    .text.netif_find:00000000 netif_find
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:410    .text.netif_find:0000006c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:415    .text.netif_set_ipaddr:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:558    .text.netif_set_ipaddr:000000a8 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:564    .text.netif_set_gw:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:614    .text.netif_set_netmask:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:664    .text.netif_set_default:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:701    .text.netif_set_default:00000018 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:706    .text.netif_set_up:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:711    .text.netif_set_up:00000000 netif_set_up
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:769    .text.netif_set_down:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:823    .text.netif_set_link_up:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:828    .text.netif_set_link_up:00000000 netif_set_link_up
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:886    .text.netif_set_link_down:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\ccsGyhhd.s:891    .text.netif_set_link_down:00000000 netif_set_link_down
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.2d80f1b5ce3c69d13e258577ddf29668
                           .group:00000000 wm4.lwipopts.h.25.76e03deb318fbe54d896a83c1b611e55
                           .group:00000000 wm4.arch.h.33.6fa4aa86d33d1490ae882caef7316405
                           .group:00000000 wm4.cpu.h.33.0ec64ad8cd52614da6479c7936fa3efa
                           .group:00000000 wm4.cc.h.49.217a0c46a6dd8448cb36cccbf00f897f
                           .group:00000000 wm4.arch.h.52.2e97dbd839a1aa815d8c47878a7f8e2b
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.184.159df79b4ca79c76561572a55985524c
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.stddef.h.39.7e3d906ac58942e0b374c527445f5de5
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.types.h.24.b2be5f53932a9c9d07787288b29b6d75
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.82.82b71f3f44c70e3a459d0f66642b05eb
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.68.ff6d7571d3ad75c55f15e26dbaa81e35
                           .group:00000000 wm4.debug.h.45.223028a5c052c9f879ffd43dd519f3f1
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.opt.h.76.0e16bb9c23144e1f631b5b5afa9a69f6
                           .group:00000000 wm4.def.h.33.d4208c3cd3e0fc64e20a8b9f95a681f3
                           .group:00000000 wm4.ip_addr.h.33.906726af218ee6749c0aa25e08c3a1fe
                           .group:00000000 wm4.netif.h.33.e68fa2fc48174dad7292f51867e80534
                           .group:00000000 wm4.err.h.33.909ff4b35439192d64931f0a04fc8fdb
                           .group:00000000 wm4.pbuf.h.34.bb639510af5bfdff8eae9cce62bf5909
                           .group:00000000 wm4.netif.h.61.25a4ec33204158dc7a027270d7b19690
                           .group:00000000 wm4.mem.h.33.ae21028c0b1f3dc3305003fc71edaf5a
                           .group:00000000 wm4.ip.h.33.cd1106783490741294b06617fff8c08f
                           .group:00000000 wm4.icmp.h.33.9c8da59f6edf08fae1a2f37336a6e965
                           .group:00000000 wm4.tcp.h.148.20c69d62fcb119a5d6bfd32bc982e4fb
                           .group:00000000 wm4.tcp_impl.h.84.6e9c66479f429d69332d497d793a73a6
                           .group:00000000 wm4.snmp.h.34.65cd272594ba53b669353bfbd8cfaef5
                           .group:00000000 wm4.etharp.h.36.01a1086ca2aee91a18155b6f03ca98c6
                           .group:00000000 wm4.memp.h.34.a409f52ec6d44b5681de26eb10b0c08b
                           .group:00000000 wm4.memp_std.h.15.637bb4287b70e9d70dbd8dd3c6f62f3b
                           .group:00000000 wm4.stats.h.51.0db2d210618aedce9edea4fb7e0fbaf1

UNDEFINED SYMBOLS
tcp_abort
tcp_active_pcbs
tcp_listen_pcbs
etharp_request
etharp_cleanup_netif
