   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_iwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  19              		.align	2
  20              		.global	IWDG_WriteAccessCmd
  21              		.thumb
  22              		.thumb_func
  24              	IWDG_WriteAccessCmd:
  25              	.LFB29:
  26              		.file 1 "../src/stm32f10x_iwdg.c"
   1:../src/stm32f10x_iwdg.c **** /**
   2:../src/stm32f10x_iwdg.c ****   ******************************************************************************
   3:../src/stm32f10x_iwdg.c ****   * @file    stm32f10x_iwdg.c
   4:../src/stm32f10x_iwdg.c ****   * @author  MCD Application Team
   5:../src/stm32f10x_iwdg.c ****   * @version V3.5.0
   6:../src/stm32f10x_iwdg.c ****   * @date    11-March-2011
   7:../src/stm32f10x_iwdg.c ****   * @brief   This file provides all the IWDG firmware functions.
   8:../src/stm32f10x_iwdg.c ****   ******************************************************************************
   9:../src/stm32f10x_iwdg.c ****   * @attention
  10:../src/stm32f10x_iwdg.c ****   *
  11:../src/stm32f10x_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../src/stm32f10x_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../src/stm32f10x_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../src/stm32f10x_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../src/stm32f10x_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../src/stm32f10x_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../src/stm32f10x_iwdg.c ****   *
  18:../src/stm32f10x_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../src/stm32f10x_iwdg.c ****   ******************************************************************************
  20:../src/stm32f10x_iwdg.c ****   */
  21:../src/stm32f10x_iwdg.c **** 
  22:../src/stm32f10x_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  23:../src/stm32f10x_iwdg.c **** #include "stm32f10x_iwdg.h"
  24:../src/stm32f10x_iwdg.c **** 
  25:../src/stm32f10x_iwdg.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../src/stm32f10x_iwdg.c ****   * @{
  27:../src/stm32f10x_iwdg.c ****   */
  28:../src/stm32f10x_iwdg.c **** 
  29:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG 
  30:../src/stm32f10x_iwdg.c ****   * @brief IWDG driver modules
  31:../src/stm32f10x_iwdg.c ****   * @{
  32:../src/stm32f10x_iwdg.c ****   */ 
  33:../src/stm32f10x_iwdg.c **** 
  34:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_TypesDefinitions
  35:../src/stm32f10x_iwdg.c ****   * @{
  36:../src/stm32f10x_iwdg.c ****   */
  37:../src/stm32f10x_iwdg.c **** 
  38:../src/stm32f10x_iwdg.c **** /**
  39:../src/stm32f10x_iwdg.c ****   * @}
  40:../src/stm32f10x_iwdg.c ****   */
  41:../src/stm32f10x_iwdg.c **** 
  42:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Defines
  43:../src/stm32f10x_iwdg.c ****   * @{
  44:../src/stm32f10x_iwdg.c ****   */ 
  45:../src/stm32f10x_iwdg.c **** 
  46:../src/stm32f10x_iwdg.c **** /* ---------------------- IWDG registers bit mask ----------------------------*/
  47:../src/stm32f10x_iwdg.c **** 
  48:../src/stm32f10x_iwdg.c **** /* KR register bit mask */
  49:../src/stm32f10x_iwdg.c **** #define KR_KEY_Reload    ((uint16_t)0xAAAA)
  50:../src/stm32f10x_iwdg.c **** #define KR_KEY_Enable    ((uint16_t)0xCCCC)
  51:../src/stm32f10x_iwdg.c **** 
  52:../src/stm32f10x_iwdg.c **** /**
  53:../src/stm32f10x_iwdg.c ****   * @}
  54:../src/stm32f10x_iwdg.c ****   */ 
  55:../src/stm32f10x_iwdg.c **** 
  56:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Macros
  57:../src/stm32f10x_iwdg.c ****   * @{
  58:../src/stm32f10x_iwdg.c ****   */
  59:../src/stm32f10x_iwdg.c **** 
  60:../src/stm32f10x_iwdg.c **** /**
  61:../src/stm32f10x_iwdg.c ****   * @}
  62:../src/stm32f10x_iwdg.c ****   */
  63:../src/stm32f10x_iwdg.c **** 
  64:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Variables
  65:../src/stm32f10x_iwdg.c ****   * @{
  66:../src/stm32f10x_iwdg.c ****   */
  67:../src/stm32f10x_iwdg.c **** 
  68:../src/stm32f10x_iwdg.c **** /**
  69:../src/stm32f10x_iwdg.c ****   * @}
  70:../src/stm32f10x_iwdg.c ****   */
  71:../src/stm32f10x_iwdg.c **** 
  72:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_FunctionPrototypes
  73:../src/stm32f10x_iwdg.c ****   * @{
  74:../src/stm32f10x_iwdg.c ****   */
  75:../src/stm32f10x_iwdg.c **** 
  76:../src/stm32f10x_iwdg.c **** /**
  77:../src/stm32f10x_iwdg.c ****   * @}
  78:../src/stm32f10x_iwdg.c ****   */
  79:../src/stm32f10x_iwdg.c **** 
  80:../src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Functions
  81:../src/stm32f10x_iwdg.c ****   * @{
  82:../src/stm32f10x_iwdg.c ****   */
  83:../src/stm32f10x_iwdg.c **** 
  84:../src/stm32f10x_iwdg.c **** /**
  85:../src/stm32f10x_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
  86:../src/stm32f10x_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
  87:../src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
  88:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
  89:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR registers
  90:../src/stm32f10x_iwdg.c ****   * @retval None
  91:../src/stm32f10x_iwdg.c ****   */
  92:../src/stm32f10x_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
  93:../src/stm32f10x_iwdg.c **** {
  27              		.loc 1 93 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  94:../src/stm32f10x_iwdg.c ****   /* Check the parameters */
  95:../src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
  96:../src/stm32f10x_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  41              		.loc 1 96 0
  42 000a 044A     		ldr	r2, .L2
  43 000c FB88     		ldrh	r3, [r7, #6]
  44 000e 1360     		str	r3, [r2]
  97:../src/stm32f10x_iwdg.c **** }
  45              		.loc 1 97 0
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0018 7047     		bx	lr
  55              	.L3:
  56 001a 00BF     		.align	2
  57              	.L2:
  58 001c 00300040 		.word	1073754112
  59              		.cfi_endproc
  60              	.LFE29:
  62              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  63              		.align	2
  64              		.global	IWDG_SetPrescaler
  65              		.thumb
  66              		.thumb_func
  68              	IWDG_SetPrescaler:
  69              	.LFB30:
  98:../src/stm32f10x_iwdg.c **** 
  99:../src/stm32f10x_iwdg.c **** /**
 100:../src/stm32f10x_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 101:../src/stm32f10x_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 102:../src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
 103:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 104:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 105:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 106:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 107:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 108:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 109:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 110:../src/stm32f10x_iwdg.c ****   * @retval None
 111:../src/stm32f10x_iwdg.c ****   */
 112:../src/stm32f10x_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 113:../src/stm32f10x_iwdg.c **** {
  70              		.loc 1 113 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75 0000 80B4     		push	{r7}
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 0346     		mov	r3, r0
  83 0008 FB71     		strb	r3, [r7, #7]
 114:../src/stm32f10x_iwdg.c ****   /* Check the parameters */
 115:../src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 116:../src/stm32f10x_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  84              		.loc 1 116 0
  85 000a 044A     		ldr	r2, .L5
  86 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  87 000e 5360     		str	r3, [r2, #4]
 117:../src/stm32f10x_iwdg.c **** }
  88              		.loc 1 117 0
  89 0010 0C37     		adds	r7, r7, #12
  90              		.cfi_def_cfa_offset 4
  91 0012 BD46     		mov	sp, r7
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 0014 5DF8047B 		ldr	r7, [sp], #4
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 0018 7047     		bx	lr
  98              	.L6:
  99 001a 00BF     		.align	2
 100              	.L5:
 101 001c 00300040 		.word	1073754112
 102              		.cfi_endproc
 103              	.LFE30:
 105              		.section	.text.IWDG_SetReload,"ax",%progbits
 106              		.align	2
 107              		.global	IWDG_SetReload
 108              		.thumb
 109              		.thumb_func
 111              	IWDG_SetReload:
 112              	.LFB31:
 118:../src/stm32f10x_iwdg.c **** 
 119:../src/stm32f10x_iwdg.c **** /**
 120:../src/stm32f10x_iwdg.c ****   * @brief  Sets IWDG Reload value.
 121:../src/stm32f10x_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 122:../src/stm32f10x_iwdg.c ****   *   This parameter must be a number between 0 and 0x0FFF.
 123:../src/stm32f10x_iwdg.c ****   * @retval None
 124:../src/stm32f10x_iwdg.c ****   */
 125:../src/stm32f10x_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 126:../src/stm32f10x_iwdg.c **** {
 113              		.loc 1 126 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 83B0     		sub	sp, sp, #12
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0006 0346     		mov	r3, r0
 126 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 127:../src/stm32f10x_iwdg.c ****   /* Check the parameters */
 128:../src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 129:../src/stm32f10x_iwdg.c ****   IWDG->RLR = Reload;
 127              		.loc 1 129 0
 128 000a 044A     		ldr	r2, .L8
 129 000c FB88     		ldrh	r3, [r7, #6]
 130 000e 9360     		str	r3, [r2, #8]
 130:../src/stm32f10x_iwdg.c **** }
 131              		.loc 1 130 0
 132 0010 0C37     		adds	r7, r7, #12
 133              		.cfi_def_cfa_offset 4
 134 0012 BD46     		mov	sp, r7
 135              		.cfi_def_cfa_register 13
 136              		@ sp needed
 137 0014 5DF8047B 		ldr	r7, [sp], #4
 138              		.cfi_restore 7
 139              		.cfi_def_cfa_offset 0
 140 0018 7047     		bx	lr
 141              	.L9:
 142 001a 00BF     		.align	2
 143              	.L8:
 144 001c 00300040 		.word	1073754112
 145              		.cfi_endproc
 146              	.LFE31:
 148              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
 149              		.align	2
 150              		.global	IWDG_ReloadCounter
 151              		.thumb
 152              		.thumb_func
 154              	IWDG_ReloadCounter:
 155              	.LFB32:
 131:../src/stm32f10x_iwdg.c **** 
 132:../src/stm32f10x_iwdg.c **** /**
 133:../src/stm32f10x_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 134:../src/stm32f10x_iwdg.c ****   *   (write access to IWDG_PR and IWDG_RLR registers disabled).
 135:../src/stm32f10x_iwdg.c ****   * @param  None
 136:../src/stm32f10x_iwdg.c ****   * @retval None
 137:../src/stm32f10x_iwdg.c ****   */
 138:../src/stm32f10x_iwdg.c **** void IWDG_ReloadCounter(void)
 139:../src/stm32f10x_iwdg.c **** {
 156              		.loc 1 139 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 80B4     		push	{r7}
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 7, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 140:../src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Reload;
 166              		.loc 1 140 0
 167 0004 034B     		ldr	r3, .L11
 168 0006 4AF6AA22 		movw	r2, #43690
 169 000a 1A60     		str	r2, [r3]
 141:../src/stm32f10x_iwdg.c **** }
 170              		.loc 1 141 0
 171 000c BD46     		mov	sp, r7
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 000e 5DF8047B 		ldr	r7, [sp], #4
 175              		.cfi_restore 7
 176              		.cfi_def_cfa_offset 0
 177 0012 7047     		bx	lr
 178              	.L12:
 179              		.align	2
 180              	.L11:
 181 0014 00300040 		.word	1073754112
 182              		.cfi_endproc
 183              	.LFE32:
 185              		.section	.text.IWDG_Enable,"ax",%progbits
 186              		.align	2
 187              		.global	IWDG_Enable
 188              		.thumb
 189              		.thumb_func
 191              	IWDG_Enable:
 192              	.LFB33:
 142:../src/stm32f10x_iwdg.c **** 
 143:../src/stm32f10x_iwdg.c **** /**
 144:../src/stm32f10x_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 145:../src/stm32f10x_iwdg.c ****   * @param  None
 146:../src/stm32f10x_iwdg.c ****   * @retval None
 147:../src/stm32f10x_iwdg.c ****   */
 148:../src/stm32f10x_iwdg.c **** void IWDG_Enable(void)
 149:../src/stm32f10x_iwdg.c **** {
 193              		.loc 1 149 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198 0000 80B4     		push	{r7}
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 0002 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 150:../src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Enable;
 203              		.loc 1 150 0
 204 0004 034B     		ldr	r3, .L14
 205 0006 4CF6CC42 		movw	r2, #52428
 206 000a 1A60     		str	r2, [r3]
 151:../src/stm32f10x_iwdg.c **** }
 207              		.loc 1 151 0
 208 000c BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 000e 5DF8047B 		ldr	r7, [sp], #4
 212              		.cfi_restore 7
 213              		.cfi_def_cfa_offset 0
 214 0012 7047     		bx	lr
 215              	.L15:
 216              		.align	2
 217              	.L14:
 218 0014 00300040 		.word	1073754112
 219              		.cfi_endproc
 220              	.LFE33:
 222              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 223              		.align	2
 224              		.global	IWDG_GetFlagStatus
 225              		.thumb
 226              		.thumb_func
 228              	IWDG_GetFlagStatus:
 229              	.LFB34:
 152:../src/stm32f10x_iwdg.c **** 
 153:../src/stm32f10x_iwdg.c **** /**
 154:../src/stm32f10x_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 155:../src/stm32f10x_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 156:../src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
 157:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 158:../src/stm32f10x_iwdg.c ****   *     @arg IWDG_FLAG_RVU: Reload Value Update on going
 159:../src/stm32f10x_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 160:../src/stm32f10x_iwdg.c ****   */
 161:../src/stm32f10x_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 162:../src/stm32f10x_iwdg.c **** {
 230              		.loc 1 162 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 16
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 0000 80B4     		push	{r7}
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 0002 85B0     		sub	sp, sp, #20
 239              		.cfi_def_cfa_offset 24
 240 0004 00AF     		add	r7, sp, #0
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 163:../src/stm32f10x_iwdg.c ****   FlagStatus bitstatus = RESET;
 244              		.loc 1 163 0
 245 000a 0023     		movs	r3, #0
 246 000c FB73     		strb	r3, [r7, #15]
 164:../src/stm32f10x_iwdg.c ****   /* Check the parameters */
 165:../src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 166:../src/stm32f10x_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 247              		.loc 1 166 0
 248 000e 094B     		ldr	r3, .L20
 249 0010 DA68     		ldr	r2, [r3, #12]
 250 0012 FB88     		ldrh	r3, [r7, #6]
 251 0014 1340     		ands	r3, r3, r2
 252 0016 002B     		cmp	r3, #0
 253 0018 02D0     		beq	.L17
 167:../src/stm32f10x_iwdg.c ****   {
 168:../src/stm32f10x_iwdg.c ****     bitstatus = SET;
 254              		.loc 1 168 0
 255 001a 0123     		movs	r3, #1
 256 001c FB73     		strb	r3, [r7, #15]
 257 001e 01E0     		b	.L18
 258              	.L17:
 169:../src/stm32f10x_iwdg.c ****   }
 170:../src/stm32f10x_iwdg.c ****   else
 171:../src/stm32f10x_iwdg.c ****   {
 172:../src/stm32f10x_iwdg.c ****     bitstatus = RESET;
 259              		.loc 1 172 0
 260 0020 0023     		movs	r3, #0
 261 0022 FB73     		strb	r3, [r7, #15]
 262              	.L18:
 173:../src/stm32f10x_iwdg.c ****   }
 174:../src/stm32f10x_iwdg.c ****   /* Return the flag status */
 175:../src/stm32f10x_iwdg.c ****   return bitstatus;
 263              		.loc 1 175 0
 264 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 176:../src/stm32f10x_iwdg.c **** }
 265              		.loc 1 176 0
 266 0026 1846     		mov	r0, r3
 267 0028 1437     		adds	r7, r7, #20
 268              		.cfi_def_cfa_offset 4
 269 002a BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 002c 5DF8047B 		ldr	r7, [sp], #4
 273              		.cfi_restore 7
 274              		.cfi_def_cfa_offset 0
 275 0030 7047     		bx	lr
 276              	.L21:
 277 0032 00BF     		.align	2
 278              	.L20:
 279 0034 00300040 		.word	1073754112
 280              		.cfi_endproc
 281              	.LFE34:
 283              		.text
 284              	.Letext0:
 285              		.file 2 "f:\\eclipse\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 286              		.file 3 "f:\\eclipse\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 287              		.file 4 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\cmsis/stm32f10x.h"
 288              		.file 5 "F:\\ARM\\STM32 Eclipse Firmware\\STM32F107_Template\\cmsis/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_iwdg.c
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:19     .text.IWDG_WriteAccessCmd:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:24     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:58     .text.IWDG_WriteAccessCmd:0000001c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:63     .text.IWDG_SetPrescaler:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:68     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:101    .text.IWDG_SetPrescaler:0000001c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:106    .text.IWDG_SetReload:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:111    .text.IWDG_SetReload:00000000 IWDG_SetReload
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:144    .text.IWDG_SetReload:0000001c $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:149    .text.IWDG_ReloadCounter:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:154    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:181    .text.IWDG_ReloadCounter:00000014 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:186    .text.IWDG_Enable:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:191    .text.IWDG_Enable:00000000 IWDG_Enable
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:218    .text.IWDG_Enable:00000014 $d
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:223    .text.IWDG_GetFlagStatus:00000000 $t
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:228    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
C:\Users\MISAKA~1.MIS\AppData\Local\Temp\cc9cRpby.s:279    .text.IWDG_GetFlagStatus:00000034 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.2d80f1b5ce3c69d13e258577ddf29668
                           .group:00000000 wm4.stm32f10x.h.51.6e18fa0f6016a7ea66d7cfe7c3be3cd1
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:00000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.34c9721dbd76a587b38991fd58e2fdab
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.cb32a32bef653f9e9414120b411eb1bf
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_iwdg.h.58.8c33ccd1cbd71674b543d304c0fe08ec

NO UNDEFINED SYMBOLS
